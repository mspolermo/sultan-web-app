{"ast":null,"code":"var _jsxFileName = \"/Users/mspolermo/git/sultan-web-app/src/components/CheckboxList.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckboxList = _ref => {\n  let {\n    value,\n    filtredGoodsList,\n    onClick\n  } = _ref;\n  let producersArray = filtredGoodsList.map(good => good.producer);\n\n  // let result: Array<{key: string; value: number;}> = producersArray.reduce((acc, i) => {\n  //     if (acc.hasOwnProperty(i)) {\n  //       acc[i] += 1;\n  //     } else {\n  //       acc[i as keyof typeof acc] = 1;\n  //     }\n  //     return acc;\n  // }, [])\n\n  //let arr = [1, 3, 4, 1, 1, 3, 4, 5];\n  let count = [];\n  for (let elem of producersArray) {\n    if (count[elem] === undefined) {\n      count[elem] = 1;\n    } else {\n      count[elem]++;\n    }\n  }\n  console.log(result[1]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_c = CheckboxList;\nexport default CheckboxList;\nvar _c;\n$RefreshReg$(_c, \"CheckboxList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CheckboxList","_ref","value","filtredGoodsList","onClick","producersArray","map","good","producer","count","elem","undefined","console","log","result","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mspolermo/git/sultan-web-app/src/components/CheckboxList.tsx"],"sourcesContent":["import React, {FC} from \"react\";\nimport { IGoods } from \"../types/types\";\nimport MyCheckbox from \"./UI/checkbox/MyCheckbox\";\n\ninterface CheckboxListProps {\n    value: any;\n    filtredGoodsList: IGoods[];\n    onClick?: any;\n}\n\n\nconst CheckboxList:FC<CheckboxListProps> = ({value, filtredGoodsList, onClick}) => {\n    let producersArray:any[] = filtredGoodsList.map( good => good.producer);\n\n    // let result: Array<{key: string; value: number;}> = producersArray.reduce((acc, i) => {\n    //     if (acc.hasOwnProperty(i)) {\n    //       acc[i] += 1;\n    //     } else {\n    //       acc[i as keyof typeof acc] = 1;\n    //     }\n    //     return acc;\n    // }, [])\n\n    //let arr = [1, 3, 4, 1, 1, 3, 4, 5];\n    let count: any = [];\n\nfor (let elem of producersArray) {\n    if (count[elem] === undefined) {\n    count[elem] = 1;\n    } else {\n    count[elem]++;\n    }\n}\n    \n      console.log(result[1])\n\n      \n     \n     \n\n    return (\n        <div>\n            {/* {filtredGoodsList.map( good => \n            <MyCheckbox \n            key={good.id} \n            good={good}\n                />\n            )} */}\n            \n            \n        </div>\n    );\n};\n\nexport default CheckboxList"],"mappings":";AAAA,OAAOA,KAAK,MAAY,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWhC,MAAMC,YAAkC,GAAGC,IAAA,IAAwC;EAAA,IAAvC;IAACC,KAAK;IAAEC,gBAAgB;IAAEC;EAAO,CAAC,GAAAH,IAAA;EAC1E,IAAII,cAAoB,GAAGF,gBAAgB,CAACG,GAAG,CAAEC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAAC;;EAEvE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,IAAIC,KAAU,GAAG,EAAE;EAEvB,KAAK,IAAIC,IAAI,IAAIL,cAAc,EAAE;IAC7B,IAAII,KAAK,CAACC,IAAI,CAAC,KAAKC,SAAS,EAAE;MAC/BF,KAAK,CAACC,IAAI,CAAC,GAAG,CAAC;IACf,CAAC,MAAM;MACPD,KAAK,CAACC,IAAI,CAAC,EAAE;IACb;EACJ;EAEME,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;EAMxB,oBACIf,OAAA;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QASM;AAEd,CAAC;AAACC,EAAA,GAzCInB,YAAkC;AA2CxC,eAAeA,YAAY;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}