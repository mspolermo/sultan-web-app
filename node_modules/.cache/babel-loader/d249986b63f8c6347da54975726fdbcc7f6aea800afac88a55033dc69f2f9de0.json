{"ast":null,"code":"var _jsxFileName = \"/Users/mspolermo/git/sultan-web-app/src/components/CheckboxList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MyCheckbox from \"./UI/checkbox/MyCheckbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet boxesArray = [];\nconst CheckboxList = _ref => {\n  _s();\n  let {\n    value,\n    filtredGoodsList,\n    onClick,\n    className\n  } = _ref;\n  let producersArray = filtredGoodsList.map(good => good.producer);\n  producersArray = producersArray.reduce((acc, i) => {\n    if (acc.hasOwnProperty(i)) {\n      acc[i] += 1;\n    } else {\n      acc[i] = 1;\n    }\n    return acc;\n  }, []);\n  let recycledproducersArray = [];\n  for (var key in producersArray) {\n    recycledproducersArray.push([key, producersArray[key]]);\n  }\n  ;\n  let checkboxClassnameCount = 1;\n  const [buttonChecker, setButtonChecker] = useState(false);\n  const [buttonName, setButtonName] = useState('Показать все');\n  function clickHandler() {\n    setButtonChecker(!buttonChecker);\n    if (!buttonChecker) {\n      setButtonName('Скрыть');\n    } else {\n      setButtonName('Показать все');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [recycledproducersArray.map(producer => /*#__PURE__*/_jsxDEV(MyCheckbox, {\n      producer: producer,\n      onClick: onClick,\n      buttonChecker: buttonChecker,\n      checkboxClassnameCount: checkboxClassnameCount++,\n      className: className\n    }, producer[0], false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      className: className + 'hidden-btn',\n      children: buttonName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(CheckboxList, \"KydWH/hE7MAgQefJgadjBIWvids=\");\n_c = CheckboxList;\nexport default CheckboxList;\nvar _c;\n$RefreshReg$(_c, \"CheckboxList\");","map":{"version":3,"names":["React","useState","MyCheckbox","jsxDEV","_jsxDEV","boxesArray","CheckboxList","_ref","_s","value","filtredGoodsList","onClick","className","producersArray","map","good","producer","reduce","acc","i","hasOwnProperty","recycledproducersArray","key","push","checkboxClassnameCount","buttonChecker","setButtonChecker","buttonName","setButtonName","clickHandler","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mspolermo/git/sultan-web-app/src/components/CheckboxList.tsx"],"sourcesContent":["import React, {FC, useMemo, useState} from \"react\";\nimport { IGoods } from \"../types/types\";\nimport MyCheckbox from \"./UI/checkbox/MyCheckbox\";\n\ninterface CheckboxListProps {\n    value: any;\n    filtredGoodsList: IGoods[];\n    onClick?: any;\n    className?: string;\n}\n\nlet boxesArray:any = []\n\nconst CheckboxList:FC<CheckboxListProps> = ({value, filtredGoodsList, onClick, className}) => {\n\n    let producersArray:any[] = filtredGoodsList.map( good => good.producer);\n    producersArray = producersArray.reduce((acc, i) => {\n        if (acc.hasOwnProperty(i)) {\n          acc[i] += 1;\n        } else {\n          acc[i as keyof typeof acc] = 1;\n        }\n        return acc;\n    }, []);\n    let recycledproducersArray = [];\n    for (var key in producersArray) {\n        recycledproducersArray.push([key, producersArray[key]]);\n    };\n\n    let checkboxClassnameCount = 1;\n    const [buttonChecker, setButtonChecker] = useState(false)\n    const [buttonName, setButtonName] = useState('Показать все')\n    function clickHandler() {\n        setButtonChecker(!buttonChecker)\n        if (!buttonChecker) {\n            setButtonName('Скрыть')\n        } else {\n            setButtonName('Показать все')\n        }\n    }\n\n    return (\n        <div>\n            {recycledproducersArray.map((producer) =>          \n                <MyCheckbox \n                    key={producer[0]} \n                    producer={producer}\n                    onClick = {onClick}\n                    buttonChecker={buttonChecker}\n                    checkboxClassnameCount = {checkboxClassnameCount++}\n                    className={className}\n                />)\n            }\n            <button onClick={clickHandler} className={className + 'hidden-btn'}>{buttonName}\n            \n            </button>\n        </div>\n    );\n};\n\nexport default CheckboxList"],"mappings":";;AAAA,OAAOA,KAAK,IAAgBC,QAAQ,QAAO,OAAO;AAElD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASlD,IAAIC,UAAc,GAAG,EAAE;AAEvB,MAAMC,YAAkC,GAAGC,IAAA,IAAmD;EAAAC,EAAA;EAAA,IAAlD;IAACC,KAAK;IAAEC,gBAAgB;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAAL,IAAA;EAErF,IAAIM,cAAoB,GAAGH,gBAAgB,CAACI,GAAG,CAAEC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAAC;EACvEH,cAAc,GAAGA,cAAc,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAK;IAC/C,IAAID,GAAG,CAACE,cAAc,CAACD,CAAC,CAAC,EAAE;MACzBD,GAAG,CAACC,CAAC,CAAC,IAAI,CAAC;IACb,CAAC,MAAM;MACLD,GAAG,CAACC,CAAC,CAAqB,GAAG,CAAC;IAChC;IACA,OAAOD,GAAG;EACd,CAAC,EAAE,EAAE,CAAC;EACN,IAAIG,sBAAsB,GAAG,EAAE;EAC/B,KAAK,IAAIC,GAAG,IAAIT,cAAc,EAAE;IAC5BQ,sBAAsB,CAACE,IAAI,CAAC,CAACD,GAAG,EAAET,cAAc,CAACS,GAAG,CAAC,CAAC,CAAC;EAC3D;EAAC;EAED,IAAIE,sBAAsB,GAAG,CAAC;EAC9B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC0B,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAC,cAAc,CAAC;EAC5D,SAAS4B,YAAYA,CAAA,EAAG;IACpBH,gBAAgB,CAAC,CAACD,aAAa,CAAC;IAChC,IAAI,CAACA,aAAa,EAAE;MAChBG,aAAa,CAAC,QAAQ,CAAC;IAC3B,CAAC,MAAM;MACHA,aAAa,CAAC,cAAc,CAAC;IACjC;EACJ;EAEA,oBACIxB,OAAA;IAAA0B,QAAA,GACKT,sBAAsB,CAACP,GAAG,CAAEE,QAAQ,iBACjCZ,OAAA,CAACF,UAAU;MAEPc,QAAQ,EAAEA,QAAS;MACnBL,OAAO,EAAIA,OAAQ;MACnBc,aAAa,EAAEA,aAAc;MAC7BD,sBAAsB,EAAIA,sBAAsB,EAAG;MACnDZ,SAAS,EAAEA;IAAU,GALhBI,QAAQ,CAAC,CAAC,CAAC;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAMlB,CAAC,eAEP9B,OAAA;MAAQO,OAAO,EAAEkB,YAAa;MAACjB,SAAS,EAAEA,SAAS,GAAG,YAAa;MAAAkB,QAAA,EAAEH;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEtE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACP;AAEd,CAAC;AAAC1B,EAAA,CA7CIF,YAAkC;AAAA6B,EAAA,GAAlC7B,YAAkC;AA+CxC,eAAeA,YAAY;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}