{"ast":null,"code":"var _jsxFileName = \"/Users/mspolermo/git/sultan-web-app/src/components/AdminList.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminList = _ref => {\n  let {\n    products\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), products.map(product => /*#__PURE__*/_jsxDEV(Admi, {\n      good: good,\n      productTypeValue: productType,\n      onProductTypeChange: setProductType\n    }, good.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 15\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = AdminList;\nexport default AdminList;\nvar _c;\n$RefreshReg$(_c, \"AdminList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AdminList","_ref","products","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","Admi","good","productTypeValue","productType","onProductTypeChange","setProductType","id","_c","$RefreshReg$"],"sources":["/Users/mspolermo/git/sultan-web-app/src/components/AdminList.tsx"],"sourcesContent":["import React, {FC, useEffect, useMemo, useState} from \"react\";\nimport { IGoods } from \"../types/types\";\nimport GoodsItem from \"./GoodsItem\";\n\ninterface AdminListProps {\n    products: IGoods[];\n}\n\nconst AdminList: FC<AdminListProps> = ({products}) => {\n    return (\n        <div>\n            <h1>Список товаров:</h1>\n            {products.map( product => \n              <Admi\n                key={good.id} \n                good={good}\n                productTypeValue={productType}\n                onProductTypeChange={setProductType}\n                />\n            )}\n        </div>\n    )\n}\n\nexport default AdminList"],"mappings":";AAAA,OAAOA,KAAK,MAA0C,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ9D,MAAMC,SAA6B,GAAGC,IAAA,IAAgB;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAD,IAAA;EAC7C,oBACIF,OAAA;IAAAI,QAAA,gBACIJ,OAAA;MAAAI,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACvBL,QAAQ,CAACM,GAAG,CAAEC,OAAO,iBACpBV,OAAA,CAACW,IAAI;MAEHC,IAAI,EAAEA,IAAK;MACXC,gBAAgB,EAAEC,WAAY;MAC9BC,mBAAmB,EAAEC;IAAe,GAH/BJ,IAAI,CAACK,EAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAIV,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEd,CAAC;AAAAU,EAAA,GAdKjB,SAA6B;AAgBnC,eAAeA,SAAS;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}