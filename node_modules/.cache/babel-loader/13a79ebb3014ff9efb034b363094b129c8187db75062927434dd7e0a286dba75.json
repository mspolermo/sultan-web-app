{"ast":null,"code":"var _jsxFileName = \"/Users/mspolermo/git/sultan-web-app/src/components/AddNewProduct.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MyInput from \"./UI/input/MyInput\";\nimport MySelect from \"./UI/select/MySelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddNewProduct = _ref => {\n  _s();\n  let {\n    create\n  } = _ref;\n  const [product, setProduct] = useState({\n    title: '',\n    image: '',\n    sizeType: '',\n    size: ''\n  });\n  const createProduct = e => {\n    e.preventDefault();\n    const newProduct = {\n      ...product,\n      id: Date.now()\n    };\n    create(newProduct);\n    setProduct({\n      title: title,\n      image: imgURL,\n      sizeType: sizeType,\n      size: size\n    });\n    console.log(product);\n  };\n  const [title, setTitle] = useState('');\n  const titleChanger = value => {\n    setTitle(value);\n  };\n  const [imgURL, setimgURL] = useState('');\n  const imgURLChanger = value => {\n    setimgURL(value);\n  };\n  const [sizeType, setsizeType] = useState('');\n  const sizeTypeChanger = value => {\n    setsizeType(value);\n    console.log(sizeType);\n  };\n  const [size, setSize] = useState('');\n  const sizeChanger = value => {\n    setSize(value);\n  };\n  const [barcode, setBarcode] = useState('');\n  const barcodeChanger = value => {\n    setBarcode(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      maxWidth: '300px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(MyInput, {\n      value: title,\n      onChange: titleChanger,\n      placeholder: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: imgURL,\n      onChange: imgURLChanger,\n      placeholder: \"ImageURL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n      value: sizeType,\n      onChange: sizeTypeChanger,\n      defaultValue: \"\\u0422\\u0438\\u043F \\u0440\\u0430\\u0437\\u043C\\u0435\\u0440\\u0430\",\n      options: [{\n        value: 'weight',\n        name: 'Вес (гр)'\n      }, {\n        value: 'volume',\n        name: 'Объем (мл)'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: size,\n      onChange: sizeChanger,\n      placeholder: \"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: barcode,\n      onChange: sizeChanger,\n      placeholder: \"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createProduct,\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u043E\\u0437\\u0438\\u0446\\u0438\\u044E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(AddNewProduct, \"LFotM/BmhXej97Zhu1ghSHe6Glw=\");\n_c = AddNewProduct;\nexport default AddNewProduct;\nvar _c;\n$RefreshReg$(_c, \"AddNewProduct\");","map":{"version":3,"names":["React","useState","MyInput","MySelect","jsxDEV","_jsxDEV","AddNewProduct","_ref","_s","create","product","setProduct","title","image","sizeType","size","createProduct","e","preventDefault","newProduct","id","Date","now","imgURL","console","log","setTitle","titleChanger","value","setimgURL","imgURLChanger","setsizeType","sizeTypeChanger","setSize","sizeChanger","barcode","setBarcode","barcodeChanger","style","display","flexDirection","maxWidth","children","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","options","name","onClick","_c","$RefreshReg$"],"sources":["/Users/mspolermo/git/sultan-web-app/src/components/AddNewProduct.tsx"],"sourcesContent":["\nimport React, {FC, useState} from \"react\";\nimport MyInput from \"./UI/input/MyInput\";\nimport MySelect from \"./UI/select/MySelect\";\n\ninterface AddNewProductProps {\n    create?: any;\n}\n\nconst AddNewProduct: FC<AddNewProductProps> =({create}) => {\n\n    const [product, setProduct] = useState ({title: '', image: '', sizeType: '', size: ''})\n    const createProduct = (e:any) => {\n        e.preventDefault()\n        const newProduct = {\n            ...product, id: Date.now()\n        }\n        create(newProduct)\n        setProduct({title: title, image: imgURL, sizeType: sizeType, size: size})\n        console.log(product)\n    }\n\n    const [title, setTitle] = useState('')\n    const titleChanger = (value:string) => {\n        setTitle(value);\n    }\n\n    const [imgURL, setimgURL] = useState('')\n    const imgURLChanger = (value:string) => {\n        setimgURL(value);\n    }\n\n    const [sizeType, setsizeType] = useState('')\n    const sizeTypeChanger = (value:string) => {\n        setsizeType(value);\n        console.log(sizeType)\n    }\n\n    const [size, setSize] = useState('')\n    const sizeChanger = (value:string) => {\n        setSize(value);\n    }\n\n    const [barcode, setBarcode] = useState('')\n    const barcodeChanger = (value:string) => {\n        setBarcode(value);\n    }\n    \n    return (\n        <div style={{display: 'flex', flexDirection: 'column', maxWidth: '300px'}}>\n            <MyInput value={title} onChange={titleChanger} placeholder = \"Title\" />\n            <MyInput value={imgURL} onChange={imgURLChanger} placeholder = \"ImageURL\" />\n            <MySelect\n                        value={sizeType}\n                        onChange={sizeTypeChanger}\n                        defaultValue='Тип размера'\n                        options={[\n                            {value: 'weight', name: 'Вес (гр)'},\n                            {value: 'volume', name: 'Объем (мл)'}\n                        ]}\n            />\n            <MyInput value={size} onChange={sizeChanger} placeholder = 'Размер' />\n            <MyInput value={barcode} onChange={sizeChanger} placeholder = 'Размер' />\n            <button onClick={createProduct}>Добавить позицию</button>\n        </div>\n    )\n}\n\nexport default AddNewProduct"],"mappings":";;AACA,OAAOA,KAAK,IAAOC,QAAQ,QAAO,OAAO;AACzC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,QAAQ,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM5C,MAAMC,aAAqC,GAAEC,IAAA,IAAc;EAAAC,EAAA;EAAA,IAAb;IAACC;EAAM,CAAC,GAAAF,IAAA;EAElD,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAE;IAACW,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAE,CAAC,CAAC;EACvF,MAAMC,aAAa,GAAIC,CAAK,IAAK;IAC7BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,UAAU,GAAG;MACf,GAAGT,OAAO;MAAEU,EAAE,EAAEC,IAAI,CAACC,GAAG;IAC5B,CAAC;IACDb,MAAM,CAACU,UAAU,CAAC;IAClBR,UAAU,CAAC;MAACC,KAAK,EAAEA,KAAK;MAAEC,KAAK,EAAEU,MAAM;MAAET,QAAQ,EAAEA,QAAQ;MAAEC,IAAI,EAAEA;IAAI,CAAC,CAAC;IACzES,OAAO,CAACC,GAAG,CAACf,OAAO,CAAC;EACxB,CAAC;EAED,MAAM,CAACE,KAAK,EAAEc,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM0B,YAAY,GAAIC,KAAY,IAAK;IACnCF,QAAQ,CAACE,KAAK,CAAC;EACnB,CAAC;EAED,MAAM,CAACL,MAAM,EAAEM,SAAS,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM6B,aAAa,GAAIF,KAAY,IAAK;IACpCC,SAAS,CAACD,KAAK,CAAC;EACpB,CAAC;EAED,MAAM,CAACd,QAAQ,EAAEiB,WAAW,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM+B,eAAe,GAAIJ,KAAY,IAAK;IACtCG,WAAW,CAACH,KAAK,CAAC;IAClBJ,OAAO,CAACC,GAAG,CAACX,QAAQ,CAAC;EACzB,CAAC;EAED,MAAM,CAACC,IAAI,EAAEkB,OAAO,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMiC,WAAW,GAAIN,KAAY,IAAK;IAClCK,OAAO,CAACL,KAAK,CAAC;EAClB,CAAC;EAED,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMoC,cAAc,GAAIT,KAAY,IAAK;IACrCQ,UAAU,CAACR,KAAK,CAAC;EACrB,CAAC;EAED,oBACIvB,OAAA;IAAKiC,KAAK,EAAE;MAACC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,QAAQ,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACtErC,OAAA,CAACH,OAAO;MAAC0B,KAAK,EAAEhB,KAAM;MAAC+B,QAAQ,EAAEhB,YAAa;MAACiB,WAAW,EAAG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACvE3C,OAAA,CAACH,OAAO;MAAC0B,KAAK,EAAEL,MAAO;MAACoB,QAAQ,EAAEb,aAAc;MAACc,WAAW,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC5E3C,OAAA,CAACF,QAAQ;MACGyB,KAAK,EAAEd,QAAS;MAChB6B,QAAQ,EAAEX,eAAgB;MAC1BiB,YAAY,EAAC,+DAAa;MAC1BC,OAAO,EAAE,CACL;QAACtB,KAAK,EAAE,QAAQ;QAAEuB,IAAI,EAAE;MAAU,CAAC,EACnC;QAACvB,KAAK,EAAE,QAAQ;QAAEuB,IAAI,EAAE;MAAY,CAAC;IACvC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACZ,eACF3C,OAAA,CAACH,OAAO;MAAC0B,KAAK,EAAEb,IAAK;MAAC4B,QAAQ,EAAET,WAAY;MAACU,WAAW,EAAG;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACtE3C,OAAA,CAACH,OAAO;MAAC0B,KAAK,EAAEO,OAAQ;MAACQ,QAAQ,EAAET,WAAY;MAACU,WAAW,EAAG;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACzE3C,OAAA;MAAQ+C,OAAO,EAAEpC,aAAc;MAAA0B,QAAA,EAAC;IAAgB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACvD;AAEd,CAAC;AAAAxC,EAAA,CAzDKF,aAAqC;AAAA+C,EAAA,GAArC/C,aAAqC;AA2D3C,eAAeA,aAAa;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}