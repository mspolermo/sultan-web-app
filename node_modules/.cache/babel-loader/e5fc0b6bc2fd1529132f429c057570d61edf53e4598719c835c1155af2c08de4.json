{"ast":null,"code":"var _jsxFileName = \"/Users/mspolermo/git/sultan-web-app/src/components/UI/button/FilterButton.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterButton = _ref => {\n  _s();\n  let {\n    name,\n    value,\n    onClick,\n    careType\n  } = _ref;\n  const [clickCount, setClickCount] = useState(0);\n  function clickHandler(event) {\n    onClick({\n      careType\n    });\n    setClickCount(clickCount + 1);\n    if (clickCount > 0) {\n      setClickCount(0);\n      careType = 'requerType';\n      onClick({\n        careType\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    value: value,\n    onClick: clickHandler,\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(FilterButton, \"lP0RdHHRli8a2nfaqf9UO7BUSv0=\");\n_c = FilterButton;\nexport default FilterButton;\nvar _c;\n$RefreshReg$(_c, \"FilterButton\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FilterButton","_ref","_s","name","value","onClick","careType","clickCount","setClickCount","clickHandler","event","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mspolermo/git/sultan-web-app/src/components/UI/button/FilterButton.tsx"],"sourcesContent":["import { type } from \"os\";\nimport React, {FC, useState} from \"react\";\n\ninterface FiletrButtonProps {\n    name: string;\n    value: any;\n    careType?: string;\n    onClick?: any;\n    className?: string;\n}\n\n\nconst FilterButton: FC<FiletrButtonProps> = ({name, value, onClick, careType, }) => {\n    const [clickCount, setClickCount] = useState(0);\n\n    function clickHandler (event:any) {\n        onClick({careType})\n        setClickCount(clickCount + 1)\n\n        if (clickCount>0) {\n            setClickCount(0)\n            careType='requerType'\n            onClick({careType})\n        }\n    }\n\n\n    return (\n        <button \n            value={value} \n            onClick={clickHandler}\n        >{name}\n        </button>\n    )\n}\n\nexport default FilterButton;"],"mappings":";;AACA,OAAOA,KAAK,IAAOC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW1C,MAAMC,YAAmC,GAAGC,IAAA,IAAwC;EAAAC,EAAA;EAAA,IAAvC;IAACC,IAAI;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAAL,IAAA;EAC3E,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAE/C,SAASY,YAAYA,CAAEC,KAAS,EAAE;IAC9BL,OAAO,CAAC;MAACC;IAAQ,CAAC,CAAC;IACnBE,aAAa,CAACD,UAAU,GAAG,CAAC,CAAC;IAE7B,IAAIA,UAAU,GAAC,CAAC,EAAE;MACdC,aAAa,CAAC,CAAC,CAAC;MAChBF,QAAQ,GAAC,YAAY;MACrBD,OAAO,CAAC;QAACC;MAAQ,CAAC,CAAC;IACvB;EACJ;EAGA,oBACIP,OAAA;IACIK,KAAK,EAAEA,KAAM;IACbC,OAAO,EAAEI,YAAa;IAAAE,QAAA,EACxBR;EAAI;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEjB,CAAC;AAAAb,EAAA,CAtBKF,YAAmC;AAAAgB,EAAA,GAAnChB,YAAmC;AAwBzC,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}