{"ast":null,"code":"var _jsxFileName = \"/Users/mspolermo/git/sultan-web-app/src/components/CheckboxList.tsx\";\nimport React from \"react\";\nimport MyCheckbox from \"./UI/checkbox/MyCheckbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckboxList = _ref => {\n  let {\n    value,\n    filtredGoodsList,\n    onClick\n  } = _ref;\n  let producersArray = filtredGoodsList.map(good => good.producer);\n  console.log(producersArray);\n  let i;\n  const res = producersArray.reduce((acc, i) => {\n    if (acc.hasOwnProperty(i)) {\n      acc[i] += 1;\n    } else {\n      acc[i] = 1;\n    }\n    return acc;\n  }, {});\n  console.log(res);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: filtredGoodsList.map(good => /*#__PURE__*/_jsxDEV(MyCheckbox, {\n      good: good\n    }, good.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_c = CheckboxList;\nexport default CheckboxList;\nvar _c;\n$RefreshReg$(_c, \"CheckboxList\");","map":{"version":3,"names":["React","MyCheckbox","jsxDEV","_jsxDEV","CheckboxList","_ref","value","filtredGoodsList","onClick","producersArray","map","good","producer","console","log","i","res","reduce","acc","hasOwnProperty","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mspolermo/git/sultan-web-app/src/components/CheckboxList.tsx"],"sourcesContent":["import React, {FC} from \"react\";\nimport { IGoods } from \"../types/types\";\nimport MyCheckbox from \"./UI/checkbox/MyCheckbox\";\n\ninterface CheckboxListProps {\n    value: any;\n    filtredGoodsList: IGoods[];\n    onClick?: any;\n}\n\nconst CheckboxList:FC<CheckboxListProps> = ({value, filtredGoodsList, onClick}) => {\n    let producersArray = filtredGoodsList.map( good => good.producer);\n    console.log(producersArray)\n\n    let i: number;\n\n    const res = producersArray.reduce((acc, i) => {\n        if (acc.hasOwnProperty(i)) {\n          acc[i as keyof typeof acc] += 1;\n        } else {\n          acc[i as keyof typeof acc] = 1;\n        }\n        return acc;\n    },{})\n\n      console.log(res)\n\n    return (\n        <div>\n            {filtredGoodsList.map( good => \n            <MyCheckbox \n            key={good.id} \n            good={good}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default CheckboxList"],"mappings":";AAAA,OAAOA,KAAK,MAAY,OAAO;AAE/B,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQlD,MAAMC,YAAkC,GAAGC,IAAA,IAAwC;EAAA,IAAvC;IAACC,KAAK;IAAEC,gBAAgB;IAAEC;EAAO,CAAC,GAAAH,IAAA;EAC1E,IAAII,cAAc,GAAGF,gBAAgB,CAACG,GAAG,CAAEC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAAC;EACjEC,OAAO,CAACC,GAAG,CAACL,cAAc,CAAC;EAE3B,IAAIM,CAAS;EAEb,MAAMC,GAAG,GAAGP,cAAc,CAACQ,MAAM,CAAC,CAACC,GAAG,EAAEH,CAAC,KAAK;IAC1C,IAAIG,GAAG,CAACC,cAAc,CAACJ,CAAC,CAAC,EAAE;MACzBG,GAAG,CAACH,CAAC,CAAqB,IAAI,CAAC;IACjC,CAAC,MAAM;MACLG,GAAG,CAACH,CAAC,CAAqB,GAAG,CAAC;IAChC;IACA,OAAOG,GAAG;EACd,CAAC,EAAC,CAAC,CAAC,CAAC;EAEHL,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;EAElB,oBACIb,OAAA;IAAAiB,QAAA,EACKb,gBAAgB,CAACG,GAAG,CAAEC,IAAI,iBAC3BR,OAAA,CAACF,UAAU;MAEXU,IAAI,EAAEA;IAAK,GADNA,IAAI,CAACU,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEN;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEd,CAAC;AAACC,EAAA,GA3BItB,YAAkC;AA6BxC,eAAeA,YAAY;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}