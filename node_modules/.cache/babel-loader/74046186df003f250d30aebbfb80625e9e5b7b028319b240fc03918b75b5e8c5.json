{"ast":null,"code":"var _jsxFileName = \"/Users/mspolermo/git/sultan-web-app/src/components/UI/checkbox/MyCheckbox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nconst MyCheckbox = _ref => {\n  _s();\n  let {\n    producer,\n    onClick,\n    checkboxClassnameCount,\n    buttonChecker,\n    className\n  } = _ref;\n  let checkboxClassName;\n  if (checkboxClassnameCount > 4) {\n    checkboxClassName = className + 'checkbox_hidden';\n  } else {\n    checkboxClassName = className + 'checkbox';\n  }\n  if (buttonChecker) {\n    checkboxClassName = className + 'checkbox';\n  }\n  let producerName = producer[0];\n  const [checked, setChecked] = useState(true);\n  function clickHandler() {\n    if (checked == true) {\n      onClick(['add', producerName]);\n      setChecked(!checked);\n    } else {\n      onClick(['remove', producerName]);\n      setChecked(!checked);\n    }\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: checkboxClassName,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      title: producerName,\n      onClick: event => clickHandler(),\n      className: className + 'box'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: producerName,\n      className: className + 'producer',\n      children: [producerName, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: producerName,\n      className: className + 'count',\n      children: [\"(\", producer[1], \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(MyCheckbox, \"aryUgSk0mPG99WIkJyykUON3SzE=\");\n_c = MyCheckbox;\nexport default MyCheckbox;\nvar _c;\n$RefreshReg$(_c, \"MyCheckbox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MyCheckbox","_ref","_s","producer","onClick","checkboxClassnameCount","buttonChecker","className","checkboxClassName","producerName","checked","setChecked","clickHandler","children","type","title","event","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c","$RefreshReg$"],"sources":["/Users/mspolermo/git/sultan-web-app/src/components/UI/checkbox/MyCheckbox.tsx"],"sourcesContent":["import React, {FC, useState} from \"react\";\nimport { IGoods } from \"../../../types/types\";\n\ninterface MyCheckboxProps {\n    key: string;\n    producer: any;\n    onClick?: any;\n    checkboxClassnameCount: number;\n    buttonChecker: boolean;\n    className?: string;\n};\n\nconst MyCheckbox:FC<MyCheckboxProps> = ({producer, onClick, checkboxClassnameCount, buttonChecker, className}) => {\n    let checkboxClassName: string;\n\n    if (checkboxClassnameCount > 4) {\n        checkboxClassName = className + 'checkbox_hidden'\n    } else {\n        checkboxClassName = className + 'checkbox'\n    }\n    if (buttonChecker) {\n        checkboxClassName = className + 'checkbox'\n    }\n\n    \n    let producerName = producer[0];\n    const [checked, setChecked] = useState(true);\n\n    function clickHandler () {\n        if (checked==true) {\n           onClick(['add', producerName]) \n           setChecked(!checked)\n        } else {\n            onClick(['remove', producerName]) \n            setChecked(!checked)\n        }\n    };\n\n    return (\n        <div className={checkboxClassName}>\n            <input \n                type=\"checkbox\" \n                title={producerName}\n                onClick={ (event) => clickHandler()}\n                className={className + 'box'}\n            />\n            <label htmlFor={producerName} className={className + 'producer'}>{producerName} </label>\n            <label htmlFor={producerName} className={className + 'count'}>({producer[1]})</label>\n        </div>\n    );\n};\n\nexport default MyCheckbox;"],"mappings":";;AAAA,OAAOA,KAAK,IAAOC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUzC;AAED,MAAMC,UAA8B,GAAGC,IAAA,IAA2E;EAAAC,EAAA;EAAA,IAA1E;IAACC,QAAQ;IAAEC,OAAO;IAAEC,sBAAsB;IAAEC,aAAa;IAAEC;EAAS,CAAC,GAAAN,IAAA;EACzG,IAAIO,iBAAyB;EAE7B,IAAIH,sBAAsB,GAAG,CAAC,EAAE;IAC5BG,iBAAiB,GAAGD,SAAS,GAAG,iBAAiB;EACrD,CAAC,MAAM;IACHC,iBAAiB,GAAGD,SAAS,GAAG,UAAU;EAC9C;EACA,IAAID,aAAa,EAAE;IACfE,iBAAiB,GAAGD,SAAS,GAAG,UAAU;EAC9C;EAGA,IAAIE,YAAY,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAC9B,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5C,SAASe,YAAYA,CAAA,EAAI;IACrB,IAAIF,OAAO,IAAE,IAAI,EAAE;MAChBN,OAAO,CAAC,CAAC,KAAK,EAAEK,YAAY,CAAC,CAAC;MAC9BE,UAAU,CAAC,CAACD,OAAO,CAAC;IACvB,CAAC,MAAM;MACHN,OAAO,CAAC,CAAC,QAAQ,EAAEK,YAAY,CAAC,CAAC;MACjCE,UAAU,CAAC,CAACD,OAAO,CAAC;IACxB;EACJ;EAAC;EAED,oBACIX,OAAA;IAAKQ,SAAS,EAAEC,iBAAkB;IAAAK,QAAA,gBAC9Bd,OAAA;MACIe,IAAI,EAAC,UAAU;MACfC,KAAK,EAAEN,YAAa;MACpBL,OAAO,EAAIY,KAAK,IAAKJ,YAAY,EAAG;MACpCL,SAAS,EAAEA,SAAS,GAAG;IAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC/B,eACFrB,OAAA;MAAOsB,OAAO,EAAEZ,YAAa;MAACF,SAAS,EAAEA,SAAS,GAAG,UAAW;MAAAM,QAAA,GAAEJ,YAAY,EAAC,GAAC;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACxFrB,OAAA;MAAOsB,OAAO,EAAEZ,YAAa;MAACF,SAAS,EAAEA,SAAS,GAAG,OAAQ;MAAAM,QAAA,GAAC,GAAC,EAACV,QAAQ,CAAC,CAAC,CAAC,EAAC,GAAC;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnF;AAEd,CAAC;AAAClB,EAAA,CAtCIF,UAA8B;AAAAsB,EAAA,GAA9BtB,UAA8B;AAwCpC,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}