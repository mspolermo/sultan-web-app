{"ast":null,"code":"var _jsxFileName = \"/Users/mspolermo/git/sultan-web-app/src/components/UI/checkbox/MyCheckbox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyCheckbox = _ref => {\n  _s();\n  let {\n    producer,\n    onClick\n  } = _ref;\n  let producerName = producer[0];\n  const [checked, setChecked] = useState(true);\n  function clickHandler(producerName, event) {\n    if (checked == true) onClick(producerName);\n    setChecked(!checked);\n    console.log(checked);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      name: producerName,\n      onClick: event => clickHandler({\n        producerName\n      }, event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: producerName,\n      children: [producerName, \" (\", producer[1], \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(MyCheckbox, \"aryUgSk0mPG99WIkJyykUON3SzE=\");\n_c = MyCheckbox;\nexport default MyCheckbox;\nvar _c;\n$RefreshReg$(_c, \"MyCheckbox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MyCheckbox","_ref","_s","producer","onClick","producerName","checked","setChecked","clickHandler","event","console","log","children","type","name","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c","$RefreshReg$"],"sources":["/Users/mspolermo/git/sultan-web-app/src/components/UI/checkbox/MyCheckbox.tsx"],"sourcesContent":["import React, {FC, useState} from \"react\";\nimport { IGoods } from \"../../../types/types\";\n\ninterface MyCheckboxProps {\n    key: string;\n    producer: any;\n    onClick?: any;\n\n}\n\n\n\nconst MyCheckbox:FC<MyCheckboxProps> = ({producer, onClick}) => {\n    \n    let producerName = producer[0];\n    const [checked, setChecked] = useState(true);\n\n    function clickHandler (producerName:any, event:any) {\n        if (checked==true)\n        onClick(producerName)\n        setChecked(!checked)\n        console.log(checked)\n    }\n\n    return (\n        <div>\n            <input \n                type=\"checkbox\" \n                name={producerName}\n                onClick={ (event) => clickHandler({producerName}, event)\n                    }\n\n            />\n            <label htmlFor={producerName}>{producerName} ({producer[1]})</label>\n        </div>\n\n    );\n};\n\nexport default MyCheckbox"],"mappings":";;AAAA,OAAOA,KAAK,IAAOC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY1C,MAAMC,UAA8B,GAAGC,IAAA,IAAyB;EAAAC,EAAA;EAAA,IAAxB;IAACC,QAAQ;IAAEC;EAAO,CAAC,GAAAH,IAAA;EAEvD,IAAII,YAAY,GAAGF,QAAQ,CAAC,CAAC,CAAC;EAC9B,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5C,SAASW,YAAYA,CAAEH,YAAgB,EAAEI,KAAS,EAAE;IAChD,IAAIH,OAAO,IAAE,IAAI,EACjBF,OAAO,CAACC,YAAY,CAAC;IACrBE,UAAU,CAAC,CAACD,OAAO,CAAC;IACpBI,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;EACxB;EAEA,oBACIP,OAAA;IAAAa,QAAA,gBACIb,OAAA;MACIc,IAAI,EAAC,UAAU;MACfC,IAAI,EAAET,YAAa;MACnBD,OAAO,EAAIK,KAAK,IAAKD,YAAY,CAAC;QAACH;MAAY,CAAC,EAAEI,KAAK;IAClD;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEP,eACFnB,OAAA;MAAOoB,OAAO,EAAEd,YAAa;MAAAO,QAAA,GAAEP,YAAY,EAAC,IAAE,EAACF,QAAQ,CAAC,CAAC,CAAC,EAAC,GAAC;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClE;AAGd,CAAC;AAAChB,EAAA,CAzBIF,UAA8B;AAAAoB,EAAA,GAA9BpB,UAA8B;AA2BpC,eAAeA,UAAU;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}