[{"/Users/mspolermo/git/sultan-web-app/src/index.tsx":"1","/Users/mspolermo/git/sultan-web-app/src/App.tsx":"2","/Users/mspolermo/git/sultan-web-app/src/components/GoodsList.tsx":"3","/Users/mspolermo/git/sultan-web-app/src/components/GoodsItem.tsx":"4","/Users/mspolermo/git/sultan-web-app/src/pages/Catalog.tsx":"5","/Users/mspolermo/git/sultan-web-app/src/pages/ProductCard.tsx":"6","/Users/mspolermo/git/sultan-web-app/src/pages/Basket.tsx":"7","/Users/mspolermo/git/sultan-web-app/src/components/UI/select/MySelect.tsx":"8","/Users/mspolermo/git/sultan-web-app/src/components/UI/button/FilterButton.tsx":"9","/Users/mspolermo/git/sultan-web-app/src/components/UI/input/MyInput.tsx":"10","/Users/mspolermo/git/sultan-web-app/src/components/CheckboxList.tsx":"11","/Users/mspolermo/git/sultan-web-app/src/components/UI/checkbox/MyCheckbox.tsx":"12","/Users/mspolermo/git/sultan-web-app/src/components/CatalogBody.tsx":"13","/Users/mspolermo/git/sultan-web-app/src/components/Header.tsx":"14","/Users/mspolermo/git/sultan-web-app/src/components/BasketItem.tsx":"15","/Users/mspolermo/git/sultan-web-app/src/pages/AdminPage.tsx":"16","/Users/mspolermo/git/sultan-web-app/src/components/AddNewProduct.tsx":"17","/Users/mspolermo/git/sultan-web-app/src/components/UI/checkbox/CaretypeCheckbox.tsx":"18","/Users/mspolermo/git/sultan-web-app/src/components/AdminList.tsx":"19","/Users/mspolermo/git/sultan-web-app/src/components/AdminItem.tsx":"20","/Users/mspolermo/git/sultan-web-app/src/types/types.tsx":"21","/Users/mspolermo/git/sultan-web-app/src/components/Breadcrumbs.tsx":"22","/Users/mspolermo/git/sultan-web-app/src/pages/Main.tsx":"23","/Users/mspolermo/git/sultan-web-app/src/components/ProductItem.tsx":"24","/Users/mspolermo/git/sultan-web-app/src/components/Footer.tsx":"25"},{"size":347,"mtime":1681376497416,"results":"26","hashOfConfig":"27"},{"size":5844,"mtime":1681379768374,"results":"28","hashOfConfig":"27"},{"size":1163,"mtime":1681380688034,"results":"29","hashOfConfig":"27"},{"size":7502,"mtime":1681384799812,"results":"30","hashOfConfig":"27"},{"size":947,"mtime":1681374532271,"results":"31","hashOfConfig":"27"},{"size":1466,"mtime":1681387364622,"results":"32","hashOfConfig":"27"},{"size":4263,"mtime":1681389259197,"results":"33","hashOfConfig":"27"},{"size":799,"mtime":1680629722599,"results":"34","hashOfConfig":"27"},{"size":786,"mtime":1680630741145,"results":"35","hashOfConfig":"27"},{"size":430,"mtime":1680631879481,"results":"36","hashOfConfig":"27"},{"size":1877,"mtime":1680674723655,"results":"37","hashOfConfig":"27"},{"size":1521,"mtime":1681383161931,"results":"38","hashOfConfig":"27"},{"size":14603,"mtime":1681385922933,"results":"39","hashOfConfig":"27"},{"size":27442,"mtime":1681384622095,"results":"40","hashOfConfig":"27"},{"size":7051,"mtime":1681389637888,"results":"41","hashOfConfig":"27"},{"size":4326,"mtime":1681373826033,"results":"42","hashOfConfig":"27"},{"size":7564,"mtime":1680804884967,"results":"43","hashOfConfig":"27"},{"size":742,"mtime":1680346792217,"results":"44","hashOfConfig":"27"},{"size":1163,"mtime":1680765580562,"results":"45","hashOfConfig":"27"},{"size":11897,"mtime":1680807439663,"results":"46","hashOfConfig":"27"},{"size":548,"mtime":1680374427378,"results":"47","hashOfConfig":"27"},{"size":1815,"mtime":1681377504507,"results":"48","hashOfConfig":"27"},{"size":328,"mtime":1680499940660,"results":"49","hashOfConfig":"27"},{"size":12769,"mtime":1680785971210,"results":"50","hashOfConfig":"27"},{"size":31834,"mtime":1681372352992,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ov97ok",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mspolermo/git/sultan-web-app/src/index.tsx",[],[],"/Users/mspolermo/git/sultan-web-app/src/App.tsx",["136","137","138","139","140","141","142","143","144","145","146"],[],"/Users/mspolermo/git/sultan-web-app/src/components/GoodsList.tsx",["147","148"],[],"/Users/mspolermo/git/sultan-web-app/src/components/GoodsItem.tsx",["149","150","151"],[],"/Users/mspolermo/git/sultan-web-app/src/pages/Catalog.tsx",["152","153"],[],"/Users/mspolermo/git/sultan-web-app/src/pages/ProductCard.tsx",["154","155","156"],[],"/Users/mspolermo/git/sultan-web-app/src/pages/Basket.tsx",["157","158","159","160","161"],[],"/Users/mspolermo/git/sultan-web-app/src/components/UI/select/MySelect.tsx",["162"],[],"import { type } from \"os\";\nimport React, {FC} from \"react\";\n\ninterface MySelectProps {\n    options: OptionsPropery[];\n    defaultValue: string;\n    value: string;\n    onChange: (sort: string) => void;\n    className?: string;\n}\n\ninterface OptionsPropery {\n    value: string;\n    name: string;\n}\n\nconst MySelect: FC<MySelectProps> = ({options, defaultValue, value, onChange, className}) => {\n    return (\n        <select className={className} value={value} onChange = {event => onChange(event.target.value)}>\n            <option disabled value=\"\">{defaultValue}</option>\n            {options.map( option =>\n                <option key={option.value}\n                value={option.value}>\n                    {option.name}\n                </option>)}\n        </select>\n    )\n}\n\nexport default MySelect;","/Users/mspolermo/git/sultan-web-app/src/components/UI/button/FilterButton.tsx",["163"],[],"import { type } from \"os\";\nimport React, {FC, useState} from \"react\";\n\ninterface FiletrButtonProps {\n    name: string;\n    value: any;\n    careType?: string;\n    onClick?: any;\n    className?: string;\n}\n\n\nconst FilterButton: FC<FiletrButtonProps> = ({name, value, onClick, careType, className}) => {\n    const [clickCount, setClickCount] = useState(0);\n\n    function clickHandler (event:any) {\n        onClick({careType})\n        setClickCount(clickCount + 1)\n\n        if (clickCount>0) {\n            setClickCount(0)\n            careType='requerType'\n            onClick({careType})\n        }\n    }\n\n\n    return (\n        <button className={className}\n            value={value} \n            onClick={clickHandler}\n        >{name}\n        </button>\n    )\n}\n\nexport default FilterButton;","/Users/mspolermo/git/sultan-web-app/src/components/UI/input/MyInput.tsx",[],[],"/Users/mspolermo/git/sultan-web-app/src/components/CheckboxList.tsx",["164","165"],[],"import React, {FC, useMemo, useState} from \"react\";\nimport { IGoods } from \"../types/types\";\nimport MyCheckbox from \"./UI/checkbox/MyCheckbox\";\n\ninterface CheckboxListProps {\n    value: any;\n    filtredGoodsList: IGoods[];\n    onClick?: any;\n    className?: string;\n}\n\nlet boxesArray:any = []\n\nconst CheckboxList:FC<CheckboxListProps> = ({value, filtredGoodsList, onClick, className}) => {\n\n    let producersArray:any[] = filtredGoodsList.map( good => good.producer);\n    producersArray = producersArray.reduce((acc, i) => {\n        if (acc.hasOwnProperty(i)) {\n          acc[i] += 1;\n        } else {\n          acc[i as keyof typeof acc] = 1;\n        }\n        return acc;\n    }, []);\n    let recycledproducersArray = [];\n    for (var key in producersArray) {\n        recycledproducersArray.push([key, producersArray[key]]);\n    };\n\n    let checkboxClassnameCount = 1;\n    const [buttonChecker, setButtonChecker] = useState(false)\n    const [buttonName, setButtonName] = useState('Показать все')\n    function clickHandler() {\n        setButtonChecker(!buttonChecker)\n        if (!buttonChecker) {\n            setButtonName('Скрыть')\n        } else {\n            setButtonName('Показать все ')\n        }\n    }\n\n    return (\n        <div>\n            {recycledproducersArray.map((producer) =>          \n                <MyCheckbox \n                    key={producer[0]} \n                    producer={producer}\n                    onClick = {onClick}\n                    buttonChecker={buttonChecker}\n                    checkboxClassnameCount = {checkboxClassnameCount++}\n                    className={className}\n                />)\n            }\n            <button onClick={clickHandler} className={className + 'hidden-btn'}>\n                {buttonName}\n               \n            </button>\n        </div>\n    );\n};\n\nexport default CheckboxList","/Users/mspolermo/git/sultan-web-app/src/components/UI/checkbox/MyCheckbox.tsx",["166","167"],[],"/Users/mspolermo/git/sultan-web-app/src/components/CatalogBody.tsx",["168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186"],[],"/Users/mspolermo/git/sultan-web-app/src/components/Header.tsx",["187","188","189","190","191","192","193"],[],"/Users/mspolermo/git/sultan-web-app/src/components/BasketItem.tsx",["194","195","196"],[],"/Users/mspolermo/git/sultan-web-app/src/pages/AdminPage.tsx",["197","198","199","200","201","202","203","204","205","206","207","208","209","210"],[],"/Users/mspolermo/git/sultan-web-app/src/components/AddNewProduct.tsx",["211","212","213"],[],"\nimport React, {FC, useEffect, useState} from \"react\";\nimport { IGoods } from \"../types/types\";\nimport CaretypeCheckbox from \"./UI/checkbox/CaretypeCheckbox\";\nimport MyInput from \"./UI/input/MyInput\";\nimport MySelect from \"./UI/select/MySelect\";\n\ninterface AddNewProductProps {\n    create?: any;\n}\n\nconst AddNewProduct: FC<AddNewProductProps> =({create}) => {\n\n    const [product, setProduct] = useState<IGoods | undefined> (undefined)\n    const createProduct = (e:any) => {\n        e.preventDefault()\n        setProduct({id: Date.now(), title: title, image: imgURL, sizeType: sizeType, size: size, barcode: barcode, producer: producer, brand: brand, desription: desription, price: price, careType: careType})\n        //console.log(product)\n    }\n    useEffect (() => {\n        if (product !== undefined) {\n            create({...product})\n        }\n    },[product])\n\n    \n\n    const [title, setTitle] = useState('')\n    const titleChanger = (value:string) => {\n        setTitle(value);\n    }\n\n    const [imgURL, setimgURL] = useState('')\n    const imgURLChanger = (value:string) => {\n        setimgURL(value);\n    }\n\n    const [sizeType, setsizeType] = useState('')\n    const sizeTypeChanger = (value:string) => {\n        setsizeType(value);\n    }\n\n    const [size, setSize] = useState(0)\n    const sizeChanger = (value:number) => {\n        setSize(value);\n    }\n\n    const [barcode, setBarcode] = useState(0)\n    const barcodeChanger = (value:number) => {\n        setBarcode(value);\n    }\n    \n    const [producer, setProducer] = useState('')\n    const producerChanger = (value:string) => {\n        setProducer(value);\n    }\n\n    const [brand, setBrand] = useState('')\n    const brandChanger = (value:string) => {\n        setBrand(value);\n    }\n\n    const [desription, setDesription] = useState('')\n    const desriptionChanger = (value:string) => {\n        setDesription(value);\n    }\n\n    const [price, setPrice] = useState(0)\n    const priceChanger = (value:number) => {\n        setPrice(value);\n    }\n\n    const [careType, setCareType ] = useState<any>([\"requerType\"])\n    const careTypeChanger = (value:Array<string>) => {\n        if (value[0] == 'add') {\n            let addingType = [...careType, value[1]]\n            setCareType(addingType)\n        } else if (value[0] == 'remove') {\n            let removingType = [...careType]\n            let index = removingType.indexOf(value[1], 0)\n            removingType.splice(index, 1)\n            setCareType(removingType)\n        }\n    }\n\n    return (\n        <div className=\"admin-form\">\n            <div className=\"admin-form__body \">\n                <div className=\"admin-form__column\">\n                    <div className=\"admin-form__block\">\n                        <p className=\"admin-form__field-name\">Название</p>\n                        <MyInput value={title} onChange={titleChanger} placeholder = \"Title\" />    \n                    </div>\n                    <div className=\"admin-form__block\">\n                        <p className=\"admin-form__field-name\">Ссылка на картинку</p>    \n                        <MyInput value={imgURL} onChange={imgURLChanger} placeholder = \"ImageURL\" />\n                    </div>\n                    <div className=\"admin-form__block\">\n                        <MySelect\n                                    value={sizeType}\n                                    onChange={sizeTypeChanger}\n                                    defaultValue='Тип размера'\n                                    options={[\n                                        {value: 'weight', name: 'Вес (гр)'},\n                                        {value: 'volume', name: 'Объем (мл)'}\n                                    ]}\n                        />\n                    </div>\n                    <div className=\"admin-form__block\">\n                        <p className=\"admin-form__field-name\">Размер</p>\n                        <MyInput value={size} type={'number'} onChange={sizeChanger} placeholder = 'Размер' />\n                    </div>\n                    <div className=\"admin-form__block\">\n                        <p className=\"admin-form__field-name\">Штрихкод</p>\n                        <MyInput value={barcode} type={'number'} onChange={barcodeChanger} placeholder = 'Штрихкод' />\n                    </div>\n                    <div className=\"admin-form__block\">\n                        <p className=\"admin-form__field-name\">Производитель</p>\n                        <MyInput value={producer} onChange={producerChanger} placeholder = 'Производитель' />\n                    </div>\n                    <div className=\"admin-form__block\">\n                        <p className=\"admin-form__field-name\">Бренд</p>\n                        <MyInput value={brand} onChange={brandChanger} placeholder = 'Бренд' />\n                    </div>\n                    <div className=\"admin-form__block\">\n                        <p className=\"admin-form__field-name\">Описание</p>\n                        <MyInput value={desription} onChange={desriptionChanger} placeholder = 'Описание' />\n                    </div>\n                    <div className=\"admin-form__block\">\n                        <p className=\"admin-form__field-name\">Цена</p>\n                        <MyInput value={price} type={'number'} onChange={priceChanger} placeholder = 'Цена' />\n                    </div>\n                </div>\n                <div className=\"admin-form__column\">\n                    <div className=\"admin-form__block\">Тип использования товара:</div>\n                    <div className=\"admin-form__block-checkboxes\">\n                        <div className=\"admin-form__checkbox-list\">\n                            <CaretypeCheckbox name='Уход за телом' value='body' onClick={careTypeChanger} /> \n                            <CaretypeCheckbox name='Уход за руками' value='hands' onClick={careTypeChanger} />\n                            <CaretypeCheckbox name='Уход за ногами' value='legs' onClick={careTypeChanger} />  \n                            <CaretypeCheckbox name='Уход за лицом' value='face' onClick={careTypeChanger} />\n                            <CaretypeCheckbox name='Уход за волосами' value='hair' onClick={careTypeChanger} /> \n                            <CaretypeCheckbox name='Средства для загара' value='sun' onClick={careTypeChanger} />\n                            <CaretypeCheckbox name='Средства для бритья' value='shaving' onClick={careTypeChanger} />  \n                            <CaretypeCheckbox name='Подарочные наборы' value='present' onClick={careTypeChanger} />\n                            <CaretypeCheckbox name='Гигиеническая продукция' value='hygienic' onClick={careTypeChanger} />\n                            <CaretypeCheckbox name='Гигиена полости рта' value='mouth' onClick={careTypeChanger} /> \n                            <CaretypeCheckbox name='Бумажная продукция' value='paper' onClick={careTypeChanger} />                  \n                            <button className=\"admin-form__btn\" onClick={createProduct}>Добавить позицию</button>\n                        </div>\n                    </div>\n                </div>\n                \n            </div>\n            \n        </div>               \n    )\n}\n\nexport default AddNewProduct","/Users/mspolermo/git/sultan-web-app/src/components/UI/checkbox/CaretypeCheckbox.tsx",["214"],[],"import React, {FC, useState} from \"react\";\n\ninterface CaretypeCheckboxProps {\n    name: string,\n    value: string,\n    onClick: any;\n\n}\n\nconst CaretypeCheckbox: FC<CaretypeCheckboxProps> = ({name, value, onClick}) => {\n\n\n    const [checked, setChecked] = useState(true);\n\n    function clickHandler () {\n        if (checked==true) {\n           onClick(['add', value])\n           setChecked(!checked)\n           \n        } else {\n            onClick(['remove', value]) \n            setChecked(!checked)\n        }\n    };\n\n    return (\n        <div>\n            <input type=\"checkbox\" name={value} onClick={ (event) => clickHandler()}/>\n            <label htmlFor={value}>{name}</label>    \n        </div>\n    )\n}\n\nexport default CaretypeCheckbox","/Users/mspolermo/git/sultan-web-app/src/components/AdminList.tsx",["215","216","217","218"],[],"import React, {FC, useEffect, useMemo, useState} from \"react\";\nimport { IGoods } from \"../types/types\";\nimport AdminItem from \"./AdminItem\";\nimport GoodsItem from \"./GoodsItem\";\n\ninterface AdminListProps {\n    products: IGoods[];\n    onRemove? : (removeItem :IGoods) => void;\n    onEdit? : (removeItem :any) => void;\n}\n\nconst AdminList: FC<AdminListProps> = ({products, onRemove, onEdit}) => {\n\n    const [removeThing, setRemoveThing] = useState<undefined | IGoods>();\n    useEffect( () => {\n        if (removeThing) {\n            onRemove?.(removeThing) \n        }\n    }, [removeThing])\n\n    const [editThing, setEditThing] = useState<undefined | IGoods> ();\n\n\n    useEffect (() => {\n        onEdit?.(editThing);\n    }, [editThing])\n    \n\n    return (\n        <div className=\"admin-list\">\n            <h1 className=\"admin-list__head\">Список товаров:</h1>\n            {products.map( product => \n              <AdminItem\n                key={product.id} \n                product={product}\n                onRemove={setRemoveThing}\n                onEdit={setEditThing}\n                />\n            )}\n        </div>\n    )\n}\n\nexport default AdminList","/Users/mspolermo/git/sultan-web-app/src/components/AdminItem.tsx",["219","220","221"],[],"import React, {FC, useEffect, useState} from \"react\";\nimport { IGoods } from \"../types/types\";\nimport CaretypeCheckbox from \"./UI/checkbox/CaretypeCheckbox\";\nimport MyInput from \"./UI/input/MyInput\";\nimport MySelect from \"./UI/select/MySelect\";\n\ninterface AdminItemProps {\n    product: IGoods;\n    onRemove? : (removeItem :IGoods) => void;\n    onEdit? : (removeItem :any) => void;\n};\n\nconst AdminItem: FC<AdminItemProps> = ({product, onRemove, onEdit}) => {\n    function removing () {\n        onRemove?.(product);\n    }\n\n    const [editValue, setEditValue] = useState (false)\n    function editing () {\n        setEditValue (!editValue)\n    }\n    \n    // useEffect (() => {\n    //     onEdit?.([editValue, product]);\n    // }, [editValue])\n\n    const [editProduct, setEditProduct] = useState<IGoods | undefined> (undefined)\n    const editingProduct = (e:any) => {\n        e.preventDefault()\n        setEditProduct({id: id, title: title, image: imgURL, sizeType: sizeType, size: size, barcode: barcode, producer: producer, brand: brand, desription: desription, price: price, careType: careType})\n        setEditValue (!editValue)\n    }\n    //console.log(editProduct)\n    useEffect (() => {\n        if (editProduct !== undefined) {\n            onEdit?.(editProduct)\n            // create({...product})\n        }\n    },[editProduct])\n\n    let id = product.id;\n\n    const [title, setTitle] = useState(product.title)\n    const titleChanger = (value:string) => {\n        setTitle(value);\n    }\n\n    const [imgURL, setimgURL] = useState(product.image)\n    const imgURLChanger = (value:string) => {\n        setimgURL(value);\n    }\n\n    const [sizeType, setsizeType] = useState(product.sizeType)\n    const sizeTypeChanger = (value:string) => {\n        setsizeType(value);\n    }\n\n    const [size, setSize] = useState(product.size)\n    const sizeChanger = (value:number) => {\n        setSize(value);\n    }\n\n    const [barcode, setBarcode] = useState(product.barcode)\n    const barcodeChanger = (value:number) => {\n        setBarcode(value);\n    }\n    \n    const [producer, setProducer] = useState(product.producer)\n    const producerChanger = (value:string) => {\n        setProducer(value);\n    }\n\n    const [brand, setBrand] = useState(product.brand)\n    const brandChanger = (value:string) => {\n        setBrand(value);\n    }\n\n    const [desription, setDesription] = useState(product.desription)\n    const desriptionChanger = (value:string) => {\n        setDesription(value);\n    }\n\n    const [price, setPrice] = useState(product.price)\n    const priceChanger = (value:number) => {\n        setPrice(value);\n    }\n\n    const [careType, setCareType ] = useState<any>([\"requerType\"])\n    const careTypeChanger = (value:Array<string>) => {\n        if (value[0] == 'add') {\n            let addingType = [...careType, value[1]]\n            setCareType(addingType)\n        } else if (value[0] == 'remove') {\n            let removingType = [...careType]\n            let index = removingType.indexOf(value[1], 0)\n            removingType.splice(index, 1)\n            setCareType(removingType)\n        }\n    }\n\n    \n\n    return (\n        <div className='admin-list__body'>\n            <div className='admin-list__item'>\n                <div className='admin-list__info'>\n                    <div className='admin-list__line'>\n                        <span className='admin-list__text admin-list__text_bold'>ID#</span>\n                        <span className='admin-list__text'>{product.id}</span>\n                        <span className='admin-list__text admin-list__text_bold'> Название: </span>\n                        <span className='admin-list__text'>{product.title}</span>\n                    </div>\n                    <div className='admin-list__line'>\n                        <span className='admin-list__text admin-list__text_bold'>Описание: </span>\n                        <span className='admin-list__text'>{product.desription}</span>   \n                    </div>\n                    <div className='admin-list__line'>\n                        <span className='admin-list__text admin-list__text_bold'>Прооизводитель: </span>\n                        <span className='admin-list__text'>{product.producer} </span>\n                        <span className='admin-list__text admin-list__text_bold'> Бренд: </span>\n                        <span className='admin-list__text'>{product.brand}</span>\n                    </div>\n                    <div className='admin-list__line'>\n                        <span className='admin-list__text admin-list__text_bold'>Тип размера: </span>\n                        <span className='admin-list__text'>{product.sizeType} </span>\n                        <span className='admin-list__text admin-list__text_bold'> Размер: </span>\n                        <span className='admin-list__text'>{product.size}</span>\n                    </div>\n                    <div className='admin-list__line'>\n                        <span className='admin-list__text admin-list__text_bold'>Штрихкод: </span>\n                        <span className='admin-list__text'>{product.barcode} </span>\n                        <span className='admin-list__text admin-list__text_bold'> Цена: </span>\n                        <span className='admin-list__text'>{product.price}</span>\n                    </div>\n                </div>\n                <div className='admin-list__careType'>\n                    <p className='admin-list__text admin-list__text_bold'>Тип ухода:</p>\n                    {product.careType.map( type => \n                        <span className='admin-list__text' key={type}>{type}, </span>)}\n                </div>\n                <div className='admin-list__img-block'>\n                    <img className='admin-list__img' src={product.image} alt={product.image} height={150}/>\n                </div>\n                <div className='admin-list__block-btns'>\n                    <button onClick={removing} className='admin-list__btn'>Удалить</button>\n                    <button onClick={editing} className='admin-list__btn'>Редактировать</button>\n                </div>\n            </div>\n            {editValue && <div className=\"admin-edit\">\n                    <h3 className=\"admin-edit__head\">Форма редактирования товара</h3>\n                    <div className=\"admin-edit__body\">\n                        <div className=\"admin-edit__column\">\n                            <div className=\"admin-edit__block\">\n                                <p className=\"admin-edit__field-name\">Название</p>\n                                <MyInput value={title} onChange={titleChanger} placeholder = \"Title\" />\n                            </div>\n                            <div className=\"admin-edit__block\">\n                                <p className=\"admin-edit__field-name\">Ссылка на картинку</p>\n                                <MyInput value={imgURL} onChange={imgURLChanger} placeholder = \"ImageURL\" />\n                            </div>\n                            <div className=\"admin-edit__block\">\n                                <MySelect\n                                    value={sizeType}\n                                    onChange={sizeTypeChanger}\n                                    defaultValue='Тип размера'\n                                    options={[\n                                        {value: 'weight', name: 'Вес (гр)'},\n                                        {value: 'volume', name: 'Объем (мл)'}\n                                    ]}\n                                />\n                            </div> \n                            <div className=\"admin-edit__block\">\n                                <p className=\"admin-edit__field-name\">Размер</p>   \n                                <MyInput value={size} type={'number'} onChange={sizeChanger} placeholder = 'Размер' />\n                            </div>\n                            <div className=\"admin-edit__block\">\n                                <p className=\"admin-edit__field-name\">Штрихкод</p> \n                                <MyInput value={barcode} type={'number'} onChange={barcodeChanger} placeholder = 'Штрихкод' />\n                            </div>\n                            <div className=\"admin-edit__block\">\n                                <p className=\"admin-edit__field-name\">Производитель</p> \n                                <MyInput value={producer} onChange={producerChanger} placeholder = 'Производитель' />\n                            </div>\n                            <div className=\"admin-edit__block\">\n                                <p className=\"admin-edit__field-name\">Бренд</p> \n                                <MyInput value={brand} onChange={brandChanger} placeholder = 'Бренд' />\n                            </div>\n                            <div className=\"admin-edit__block\">\n                                <p className=\"admin-edit__field-name\">Описание</p> \n                                <MyInput value={desription} onChange={desriptionChanger} placeholder = 'Описание' />\n                            </div>\n                            <div className=\"admin-edit__block\">\n                                <p className=\"admin-edit__field-name\">Цена</p> \n                                <MyInput value={price} type={'number'} onChange={priceChanger} placeholder = 'Цена' />\n                            </div>\n                        </div>    \n                        <div className=\"admin-edit__column\">\n                            <div className=\"admin-edit__block\">Тип использования товара:</div>\n                            <div className=\"admin-edit__block-checkboxes\">\n                                <div className=\"admin-edit__checkbox-list\">\n                                    <CaretypeCheckbox name='Уход за телом' value='body' onClick={careTypeChanger} /> \n                                    <CaretypeCheckbox name='Уход за руками' value='hands' onClick={careTypeChanger} />\n                                    <CaretypeCheckbox name='Уход за ногами' value='legs' onClick={careTypeChanger} />  \n                                    <CaretypeCheckbox name='Уход за лицом' value='face' onClick={careTypeChanger} />\n                                    <CaretypeCheckbox name='Уход за волосами' value='hair' onClick={careTypeChanger} /> \n                                    <CaretypeCheckbox name='Средства для загара' value='sun' onClick={careTypeChanger} />\n                                    <CaretypeCheckbox name='Средства для бритья' value='shaving' onClick={careTypeChanger} />  \n                                    <CaretypeCheckbox name='Подарочные наборы' value='present' onClick={careTypeChanger} />\n                                    <CaretypeCheckbox name='Гигиеническая продукция' value='hygienic' onClick={careTypeChanger} />\n                                    <CaretypeCheckbox name='Гигиена полости рта' value='mouth' onClick={careTypeChanger} /> \n                                    <CaretypeCheckbox name='Бумажная продукция' value='paper' onClick={careTypeChanger} />                  \n                                </div>\n                            </div>\n                            <button className=\"admin-edit__btn\" onClick={editingProduct}>Сохранить позицию</button>\n                \n                        </div>           \n                    </div>\n            \n            \n            </div>}\n            \n        </div>\n    )    \n}\n\nexport default AdminItem","/Users/mspolermo/git/sultan-web-app/src/types/types.tsx",[],[],[],"/Users/mspolermo/git/sultan-web-app/src/components/Breadcrumbs.tsx",["222","223","224"],[],"/Users/mspolermo/git/sultan-web-app/src/pages/Main.tsx",[],[],"/Users/mspolermo/git/sultan-web-app/src/components/ProductItem.tsx",["225","226","227"],[],"import React, {FC, useState} from \"react\";\nimport { IGoods } from \"../types/types\";\nimport '../App.css'\nimport { useNavigate } from \"react-router-dom\";\n\n\ninterface ProductItemProps {\n    good: IGoods;\n    productTypeValue?: string;\n    onProductTypeChange?: (newType: string) => void;\n    goods?: IGoods[];\n};\n\nconst ProductItem: FC<ProductItemProps> = ({good, goods, productTypeValue, onProductTypeChange}) => {\n    const navigate = useNavigate();\n\n    function addOrder(e:any, good:IGoods) {\n        e.stopPropagation();\n        onProductTypeChange?.((good.id).toString())\n        //console.log(good.id)\n    }\n\n    // console.log(good.id - 1)\n    let index = goods?.findIndex ((find) => find.id == good.id)\n    // console.log(index)\n\n    return (\n        <div \n        onClick={() => navigate('/catalog/' + (index))}\n        className=\"product\">\n            <div className=\"container product__container\">\n                <div className=\"product__left\">\n                    <img className=\"product__img\" src={good.image} alt=\"Img\" />\n                </div>\n                <div className=\"product__right\">\n                    <p className=\"product__available\">В наличии</p>\n                    <div className=\"product__description\">\n                        <span className=\"product__title\">{good.title} </span> \n                        <span className=\"product__title-additional\">{good.desription}</span>\n                    </div>\n                    {good.sizeType == 'weight' ? (\n                        <div className=\"product__size\">\n                            <svg width=\"20\" height=\"15\" viewBox=\"0 0 20 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M13.3035 7.99994C12.7753 7.99994 12.2785 7.71869 12.0097 7.26869L10.0003 3.93743L7.9941 7.26869C7.72222 7.72181 7.22535 8.00306 6.69722 8.00306C6.5566 8.00306 6.41597 7.98431 6.2816 7.94369L2.00035 6.71868V12.2812C2.00035 12.7406 2.31285 13.1406 2.7566 13.2499L9.51285 14.9406C9.8316 15.0187 10.166 15.0187 10.4816 14.9406L17.2441 13.2499C17.6878 13.1374 18.0003 12.7374 18.0003 12.2812V6.71868L13.7191 7.94056C13.5847 7.98119 13.4441 7.99994 13.3035 7.99994ZM19.9472 4.49369L18.3378 1.28118C18.241 1.08743 18.0316 0.974934 17.816 1.00306L10.0003 1.99993L12.866 6.75306C12.9847 6.94993 13.2222 7.04368 13.4441 6.98118L19.6285 5.21556C19.9378 5.12493 20.0878 4.78118 19.9472 4.49369ZM1.66285 1.28118L0.0534711 4.49369C-0.0902789 4.78118 0.0628461 5.12493 0.369096 5.21243L6.55347 6.97806C6.77535 7.04056 7.01285 6.94681 7.1316 6.74993L10.0003 1.99993L2.1816 1.00306C1.96597 0.978059 1.75972 1.08743 1.66285 1.28118Z\" fill=\"#3F4E65\"/></svg>\n                            <p className=\"product__size-description\">{good.size} г</p>\n                        </div>\n                        ) : (\n                            <div className=\"product__size\">\n                                <svg width=\"9\" height=\"15\" viewBox=\"0 0 9 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.1 14.0625C8.05312 14.3164 7.95234 14.5361 7.79766 14.7217C7.64297 14.9072 7.44375 15 7.2 15H1.8C1.55625 15 1.35938 14.9097 1.20938 14.729C1.05937 14.5483 0.95625 14.3262 0.9 14.0625L0 8.4375V6.5625C0 6.2793 0.0914062 6.04492 0.274219 5.85938C0.457031 5.67383 0.726562 5.49072 1.08281 5.31006C1.43906 5.12939 1.65937 5.00977 1.74375 4.95117C2.11875 4.67773 2.45625 4.35547 2.75625 3.98438C3.05625 3.61328 3.27656 3.22266 3.41719 2.8125H3.15C3.02812 2.8125 2.92266 2.76611 2.83359 2.67334C2.74453 2.58057 2.7 2.4707 2.7 2.34375V0.46875C2.7 0.341797 2.74453 0.231934 2.83359 0.13916C2.92266 0.0463867 3.02812 0 3.15 0H5.85C5.97187 0 6.07734 0.0463867 6.16641 0.13916C6.25547 0.231934 6.3 0.341797 6.3 0.46875V2.34375C6.3 2.4707 6.25547 2.58057 6.16641 2.67334C6.07734 2.76611 5.97187 2.8125 5.85 2.8125H5.58281C5.86406 3.60352 6.38437 4.28711 7.14375 4.86328C7.24687 4.95117 7.48125 5.08789 7.84687 5.27344C8.2125 5.45898 8.49609 5.64941 8.69766 5.84473C8.89922 6.04004 9 6.2793 9 6.5625V8.4375L8.1 14.0625Z\" fill=\"#3F4E65\"/></svg>\n                                <p className=\"product__size-description\">{good.size} мл</p>\n                            </div>\n                        )}\n                    <div className=\"product__buy-item\">\n                        <p className=\"product__price\">{good.price} ₸</p>\n                        <button onClick={(e) => addOrder(e, good)} className=\"product__btn\">\n                            В корзину\n                            <svg width=\"25\" height=\"18\" viewBox=\"0 0 25 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M24.448 4.09209C24.2955 3.87908 24.0909 3.77258 23.8341 3.77258H7.48756L7.0439 2.61757C6.93156 2.23889 6.77908 1.91543 6.58649 1.6472C6.39389 1.37897 6.18926 1.18963 5.97259 1.07918C5.75592 0.968728 5.56734 0.893781 5.40684 0.854335C5.24635 0.814889 5.08585 0.795166 4.92536 0.795166H1.62717C1.41852 0.795166 1.24198 0.866169 1.09753 1.00817C0.953083 1.15018 0.880859 1.33163 0.880859 1.55253C0.880859 1.67876 0.912959 1.80104 0.977157 1.91938C1.04136 2.03772 1.13364 2.12844 1.25401 2.19155C1.37438 2.25467 1.49877 2.28622 1.62717 2.28622H4.92536C4.98955 2.28622 5.04974 2.29411 5.10591 2.30989C5.16209 2.32567 5.23832 2.39273 5.33462 2.51107C5.43092 2.62941 5.51117 2.80691 5.57537 3.04359L9.02832 12.5248C9.06042 12.6195 9.11258 12.7102 9.1848 12.797C9.25703 12.8838 9.34129 12.9508 9.43758 12.9982C9.53388 13.0455 9.6382 13.0692 9.75055 13.0692H20.1507C20.3112 13.0692 20.4596 13.0218 20.5961 12.9272C20.7325 12.8325 20.8248 12.7142 20.8729 12.5722L24.5563 4.79029C24.6365 4.53783 24.6004 4.3051 24.448 4.09209ZM19.621 11.5545H10.3524L7.89682 5.2873H22.7266L19.621 11.5545ZM18.2328 13.8905C17.7031 13.8905 17.2497 14.0759 16.8726 14.4467C16.4954 14.8175 16.3068 15.2633 16.3068 15.784C16.3068 16.3047 16.4954 16.7504 16.8726 17.1212C17.2497 17.492 17.7031 17.6774 18.2328 17.6774C18.7624 17.6774 19.2158 17.492 19.593 17.1212C19.9701 16.7504 20.1587 16.3047 20.1587 15.784C20.1587 15.2633 19.9701 14.8175 19.593 14.4467C19.2158 14.0759 18.7624 13.8905 18.2328 13.8905ZM11.2993 13.8905C10.9462 13.8905 10.6212 13.9773 10.3243 14.1509C10.0274 14.3245 9.79469 14.5532 9.62617 14.8373C9.45765 15.1213 9.37339 15.4368 9.37339 15.784C9.37339 16.3047 9.56197 16.7504 9.93913 17.1212C10.3163 17.492 10.7697 17.6774 11.2993 17.6774C11.829 17.6774 12.2824 17.492 12.6595 17.1212C13.0367 16.7504 13.2253 16.3047 13.2253 15.784C13.2253 15.6577 13.2133 15.5315 13.1892 15.4053C13.1651 15.2791 13.129 15.1607 13.0808 15.0503C13.0327 14.9398 12.9725 14.8333 12.9003 14.7308C12.8281 14.6282 12.7478 14.5335 12.6595 14.4467C12.5713 14.36 12.475 14.2811 12.3706 14.2101C12.2663 14.1391 12.158 14.0799 12.0456 14.0326C11.9333 13.9852 11.8129 13.9497 11.6845 13.9261C11.5561 13.9024 11.4277 13.8905 11.2993 13.8905Z\" fill=\"white\"/></svg>\n                        </button>\n                    </div>\n                    <div className=\"product__share-block\">\n                        <svg className=\"product__img-share\" width=\"20\" height=\"21\" viewBox=\"0 0 20 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4.00004 13.5C4.87469 13.4974 5.71626 13.1653 6.35704 12.57L12.617 16.147C12.4073 16.9666 12.4998 17.8343 12.8775 18.5913C13.2552 19.3483 13.893 19.9439 14.674 20.2692C15.455 20.5944 16.327 20.6274 17.1304 20.3623C17.9338 20.0971 18.6148 19.5515 19.0488 18.8252C19.4827 18.099 19.6406 17.2408 19.4935 16.4076C19.3464 15.5745 18.9042 14.8222 18.2478 14.2885C17.5914 13.7548 16.7647 13.4753 15.919 13.5013C15.0734 13.5273 14.2655 13.857 13.643 14.43L7.38304 10.853C7.44904 10.603 7.48504 10.344 7.49104 10.085L13.641 6.56996C14.2332 7.10874 14.9927 7.42747 15.792 7.47268C16.5913 7.51789 17.3818 7.28684 18.031 6.81828C18.6802 6.34972 19.1484 5.67217 19.3572 4.89929C19.5661 4.1264 19.5027 3.30522 19.1779 2.5735C18.853 1.84178 18.2864 1.24404 17.5731 0.88056C16.8597 0.517083 16.0431 0.409982 15.2602 0.577226C14.4772 0.744469 13.7756 1.17588 13.2731 1.79909C12.7705 2.42229 12.4976 3.19937 12.5 3.99996C12.504 4.28796 12.543 4.57497 12.617 4.85296L6.93304 8.09997C6.60341 7.59003 6.1468 7.17461 5.60805 6.89454C5.06931 6.61446 4.46697 6.47936 3.86021 6.50251C3.25346 6.52566 2.66316 6.70627 2.14732 7.02658C1.63148 7.34689 1.20785 7.79589 0.918041 8.32946C0.628232 8.86303 0.48222 9.46282 0.494351 10.0699C0.506482 10.677 0.676338 11.2704 0.98723 11.792C1.29812 12.3136 1.73936 12.7453 2.26758 13.0447C2.7958 13.3442 3.39284 13.5011 4.00004 13.5Z\" fill=\"#FFC85E\"/></svg>\n                        <p className=\"product__promotion\">При покупке от 10 000 ₸ бесплатная доставка по Кокчетаву и области</p>\n                        <div className=\"product__pricelist-btn\">\n                            <p className=\"product__pricelist\">Прайс-лист</p>\n                            <svg  width=\"12\" height=\"13\" viewBox=\"0 0 12 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.958 4.375H8.12467V0.125H3.87467V4.375H1.04134L5.99967 10.0417L10.958 4.375ZM0.333008 11.4583H11.6663V12.875H0.333008V11.4583Z\" fill=\"#3F4E65\"/></svg>\n                        </div>\n                    </div>\n                    <div className=\"product__info\">\n                        <span className=\"product__field-name\">Производитель: </span>\n                        <span className=\"product__field-value\">{good.producer}</span>\n                    </div>\n                    <div className=\"product__info\">\n                        <span className=\"product__field-name\">Бренд: </span>\n                        <span className=\"product__field-value\">{good.brand}</span>\n                    </div>\n                    <div className=\"product__info\">\n                        <span className=\"product__field-name\">Артикул: </span>\n                        <span className=\"product__field-value\">{good.barcode}</span>\n                    </div>\n                    <div className=\"product__info\">\n                        <span className=\"product__field-name\">Штрихкод: </span>\n                        <span className=\"product__field-value\">{good.barcode}</span>\n                    </div>\n                    <div className=\"product__info\">\n                        <p className=\"product__head\">Описание</p>\n                        <p className=\"product__text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam interdum ut justo, vestibulum sagittis iaculis iaculis. Quis mattis vulputate feugiat massa vestibulum duis. Faucibus consectetur aliquet sed pellentesque consequat consectetur congue mauris venenatis. Nunc elit, dignissim sed nulla ullamcorper enim, malesuada.</p>\n                    </div>\n                    <div className=\"product__characteristics\">\n                        <p className=\"product__head\">Характеристики</p>\n                        <div className=\"product__info\">\n                            <span className=\"product__field-name\">Назначение: </span>\n                            <span className=\"product__field-value\">{good.title}</span>\n                        </div>\n                        <div className=\"product__info\">\n                            <span className=\"product__field-name\">Тип: </span>\n                            <span className=\"product__field-value\">{good.title}</span>\n                        </div>\n                        <div className=\"product__info\">\n                            <span className=\"product__field-name\">Производитель: </span>\n                            <span className=\"product__field-value\">{good.producer}</span>\n                        </div>\n                        <div className=\"product__info\">\n                            <span className=\"product__field-name\">Бренд: </span>\n                            <span className=\"product__field-value\">{good.brand}</span>\n                        </div>\n                        <div className=\"product__info\">\n                            <span className=\"product__field-name\">Артикул: </span>\n                            <span className=\"product__field-value\">{good.barcode}</span>\n                        </div>\n                        <div className=\"product__info\">\n                            <span className=\"product__field-name\">Штрихкод: </span>\n                            <span className=\"product__field-value\">{good.barcode}</span>\n                        </div>\n                        <div className=\"product__info\">\n                            <span className=\"product__field-name\">Вес: </span>\n                            <span className=\"product__field-value\">{good.size} г</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n      </div>\n    )\n}\n\nexport default ProductItem;","/Users/mspolermo/git/sultan-web-app/src/components/Footer.tsx",["228","229","230","231","232","233","234","235","236","237"],[],{"ruleId":"238","severity":1,"message":"239","line":9,"column":10,"nodeType":"240","messageId":"241","endLine":9,"endColumn":23},{"ruleId":"238","severity":1,"message":"242","line":18,"column":11,"nodeType":"240","messageId":"241","endLine":18,"endColumn":16},{"ruleId":"243","severity":1,"message":"244","line":36,"column":77,"nodeType":"245","messageId":"246","endLine":36,"endColumn":79},{"ruleId":"243","severity":1,"message":"244","line":50,"column":29,"nodeType":"245","messageId":"246","endLine":50,"endColumn":31},{"ruleId":"247","severity":1,"message":"248","line":60,"column":6,"nodeType":"249","endLine":60,"endColumn":19,"suggestions":"250"},{"ruleId":"243","severity":1,"message":"244","line":73,"column":27,"nodeType":"245","messageId":"246","endLine":73,"endColumn":29},{"ruleId":"247","severity":1,"message":"251","line":80,"column":6,"nodeType":"249","endLine":80,"endColumn":18,"suggestions":"252"},{"ruleId":"243","severity":1,"message":"244","line":90,"column":77,"nodeType":"245","messageId":"246","endLine":90,"endColumn":79},{"ruleId":"247","severity":1,"message":"253","line":100,"column":6,"nodeType":"249","endLine":100,"endColumn":23,"suggestions":"254"},{"ruleId":"243","severity":1,"message":"244","line":117,"column":27,"nodeType":"245","messageId":"246","endLine":117,"endColumn":29},{"ruleId":"247","severity":1,"message":"255","line":124,"column":6,"nodeType":"249","endLine":124,"endColumn":19,"suggestions":"256"},{"ruleId":"238","severity":1,"message":"257","line":1,"column":31,"nodeType":"240","messageId":"241","endLine":1,"endColumn":38},{"ruleId":"247","severity":1,"message":"258","line":23,"column":10,"nodeType":"249","endLine":23,"endColumn":23,"suggestions":"259"},{"ruleId":"238","severity":1,"message":"260","line":1,"column":20,"nodeType":"240","messageId":"241","endLine":1,"endColumn":28},{"ruleId":"243","severity":1,"message":"244","line":27,"column":67,"nodeType":"245","messageId":"246","endLine":27,"endColumn":69},{"ruleId":"243","severity":1,"message":"244","line":39,"column":28,"nodeType":"245","messageId":"246","endLine":39,"endColumn":30},{"ruleId":"238","severity":1,"message":"257","line":1,"column":31,"nodeType":"240","messageId":"241","endLine":1,"endColumn":38},{"ruleId":"247","severity":1,"message":"258","line":20,"column":10,"nodeType":"249","endLine":20,"endColumn":23,"suggestions":"261"},{"ruleId":"238","severity":1,"message":"262","line":3,"column":8,"nodeType":"240","messageId":"241","endLine":3,"endColumn":17},{"ruleId":"238","severity":1,"message":"263","line":23,"column":11,"nodeType":"240","messageId":"241","endLine":23,"endColumn":19},{"ruleId":"247","severity":1,"message":"258","line":33,"column":10,"nodeType":"249","endLine":33,"endColumn":23,"suggestions":"264"},{"ruleId":"238","severity":1,"message":"257","line":1,"column":31,"nodeType":"240","messageId":"241","endLine":1,"endColumn":38},{"ruleId":"238","severity":1,"message":"265","line":20,"column":11,"nodeType":"240","messageId":"241","endLine":20,"endColumn":24},{"ruleId":"247","severity":1,"message":"266","line":43,"column":7,"nodeType":"249","endLine":43,"endColumn":26,"suggestions":"267"},{"ruleId":"247","severity":1,"message":"268","line":51,"column":8,"nodeType":"249","endLine":51,"endColumn":15,"suggestions":"269"},{"ruleId":"247","severity":1,"message":"270","line":59,"column":8,"nodeType":"249","endLine":59,"endColumn":21,"suggestions":"271"},{"ruleId":"238","severity":1,"message":"272","line":1,"column":10,"nodeType":"240","messageId":"241","endLine":1,"endColumn":14},{"ruleId":"238","severity":1,"message":"272","line":1,"column":10,"nodeType":"240","messageId":"241","endLine":1,"endColumn":14},{"ruleId":"238","severity":1,"message":"257","line":1,"column":20,"nodeType":"240","messageId":"241","endLine":1,"endColumn":27},{"ruleId":"238","severity":1,"message":"273","line":12,"column":5,"nodeType":"240","messageId":"241","endLine":12,"endColumn":19},{"ruleId":"238","severity":1,"message":"274","line":2,"column":10,"nodeType":"240","messageId":"241","endLine":2,"endColumn":16},{"ruleId":"243","severity":1,"message":"244","line":30,"column":20,"nodeType":"245","messageId":"246","endLine":30,"endColumn":22},{"ruleId":"238","severity":1,"message":"275","line":17,"column":22,"nodeType":"240","messageId":"241","endLine":17,"endColumn":33},{"ruleId":"247","severity":1,"message":"258","line":26,"column":10,"nodeType":"249","endLine":26,"endColumn":23,"suggestions":"276"},{"ruleId":"243","severity":1,"message":"244","line":40,"column":28,"nodeType":"245","messageId":"246","endLine":40,"endColumn":30},{"ruleId":"243","severity":1,"message":"244","line":40,"column":62,"nodeType":"245","messageId":"246","endLine":40,"endColumn":64},{"ruleId":"243","severity":1,"message":"244","line":42,"column":35,"nodeType":"245","messageId":"246","endLine":42,"endColumn":37},{"ruleId":"243","severity":1,"message":"244","line":42,"column":69,"nodeType":"245","messageId":"246","endLine":42,"endColumn":71},{"ruleId":"243","severity":1,"message":"244","line":44,"column":35,"nodeType":"245","messageId":"246","endLine":44,"endColumn":37},{"ruleId":"243","severity":1,"message":"244","line":44,"column":69,"nodeType":"245","messageId":"246","endLine":44,"endColumn":71},{"ruleId":"243","severity":1,"message":"244","line":46,"column":35,"nodeType":"245","messageId":"246","endLine":46,"endColumn":37},{"ruleId":"243","severity":1,"message":"244","line":46,"column":69,"nodeType":"245","messageId":"246","endLine":46,"endColumn":71},{"ruleId":"238","severity":1,"message":"277","line":102,"column":11,"nodeType":"240","messageId":"241","endLine":102,"endColumn":28},{"ruleId":"243","severity":1,"message":"244","line":104,"column":25,"nodeType":"245","messageId":"246","endLine":104,"endColumn":27},{"ruleId":"243","severity":1,"message":"244","line":106,"column":31,"nodeType":"245","messageId":"246","endLine":106,"endColumn":33},{"ruleId":"247","severity":1,"message":"278","line":109,"column":8,"nodeType":"249","endLine":109,"endColumn":18,"suggestions":"279"},{"ruleId":"280","severity":1,"message":"281","line":117,"column":27,"nodeType":"282","messageId":"283","endLine":117,"endColumn":78},{"ruleId":"243","severity":1,"message":"244","line":119,"column":37,"nodeType":"245","messageId":"246","endLine":119,"endColumn":39},{"ruleId":"247","severity":1,"message":"284","line":124,"column":8,"nodeType":"249","endLine":124,"endColumn":57,"suggestions":"285"},{"ruleId":"243","severity":1,"message":"244","line":140,"column":29,"nodeType":"245","messageId":"246","endLine":140,"endColumn":31},{"ruleId":"247","severity":1,"message":"286","line":145,"column":8,"nodeType":"249","endLine":145,"endColumn":39,"suggestions":"287"},{"ruleId":"238","severity":1,"message":"257","line":1,"column":20,"nodeType":"240","messageId":"241","endLine":1,"endColumn":27},{"ruleId":"238","severity":1,"message":"260","line":1,"column":29,"nodeType":"240","messageId":"241","endLine":1,"endColumn":37},{"ruleId":"288","severity":1,"message":"289","line":42,"column":33,"nodeType":"290","endLine":42,"endColumn":73},{"ruleId":"288","severity":1,"message":"289","line":45,"column":33,"nodeType":"290","endLine":45,"endColumn":73},{"ruleId":"288","severity":1,"message":"289","line":48,"column":33,"nodeType":"290","endLine":48,"endColumn":73},{"ruleId":"288","severity":1,"message":"289","line":51,"column":33,"nodeType":"290","endLine":51,"endColumn":73},{"ruleId":"288","severity":1,"message":"289","line":82,"column":29,"nodeType":"290","endLine":82,"endColumn":71},{"ruleId":"238","severity":1,"message":"257","line":1,"column":31,"nodeType":"240","messageId":"241","endLine":1,"endColumn":38},{"ruleId":"247","severity":1,"message":"291","line":25,"column":8,"nodeType":"249","endLine":25,"endColumn":17,"suggestions":"292"},{"ruleId":"243","severity":1,"message":"244","line":37,"column":33,"nodeType":"245","messageId":"246","endLine":37,"endColumn":35},{"ruleId":"247","severity":1,"message":"293","line":28,"column":8,"nodeType":"249","endLine":28,"endColumn":18,"suggestions":"294"},{"ruleId":"243","severity":1,"message":"244","line":34,"column":30,"nodeType":"245","messageId":"246","endLine":34,"endColumn":32},{"ruleId":"243","severity":1,"message":"244","line":36,"column":37,"nodeType":"245","messageId":"246","endLine":36,"endColumn":39},{"ruleId":"243","severity":1,"message":"244","line":38,"column":40,"nodeType":"245","messageId":"246","endLine":38,"endColumn":42},{"ruleId":"243","severity":1,"message":"244","line":40,"column":36,"nodeType":"245","messageId":"246","endLine":40,"endColumn":38},{"ruleId":"243","severity":1,"message":"244","line":42,"column":39,"nodeType":"245","messageId":"246","endLine":42,"endColumn":41},{"ruleId":"243","severity":1,"message":"244","line":44,"column":40,"nodeType":"245","messageId":"246","endLine":44,"endColumn":42},{"ruleId":"243","severity":1,"message":"244","line":46,"column":37,"nodeType":"245","messageId":"246","endLine":46,"endColumn":39},{"ruleId":"243","severity":1,"message":"244","line":48,"column":42,"nodeType":"245","messageId":"246","endLine":48,"endColumn":44},{"ruleId":"243","severity":1,"message":"244","line":50,"column":37,"nodeType":"245","messageId":"246","endLine":50,"endColumn":39},{"ruleId":"243","severity":1,"message":"244","line":52,"column":47,"nodeType":"245","messageId":"246","endLine":52,"endColumn":49},{"ruleId":"247","severity":1,"message":"295","line":71,"column":8,"nodeType":"249","endLine":71,"endColumn":21,"suggestions":"296"},{"ruleId":"247","severity":1,"message":"295","line":88,"column":8,"nodeType":"249","endLine":88,"endColumn":19,"suggestions":"297"},{"ruleId":"243","severity":1,"message":"244","line":111,"column":25,"nodeType":"245","messageId":"246","endLine":111,"endColumn":27},{"ruleId":"247","severity":1,"message":"298","line":24,"column":7,"nodeType":"249","endLine":24,"endColumn":16,"suggestions":"299"},{"ruleId":"243","severity":1,"message":"244","line":75,"column":22,"nodeType":"245","messageId":"246","endLine":75,"endColumn":24},{"ruleId":"243","severity":1,"message":"244","line":78,"column":29,"nodeType":"245","messageId":"246","endLine":78,"endColumn":31},{"ruleId":"243","severity":1,"message":"244","line":16,"column":20,"nodeType":"245","messageId":"246","endLine":16,"endColumn":22},{"ruleId":"238","severity":1,"message":"257","line":1,"column":31,"nodeType":"240","messageId":"241","endLine":1,"endColumn":38},{"ruleId":"238","severity":1,"message":"262","line":4,"column":8,"nodeType":"240","messageId":"241","endLine":4,"endColumn":17},{"ruleId":"247","severity":1,"message":"270","line":19,"column":8,"nodeType":"249","endLine":19,"endColumn":21,"suggestions":"300"},{"ruleId":"247","severity":1,"message":"301","line":26,"column":8,"nodeType":"249","endLine":26,"endColumn":19,"suggestions":"302"},{"ruleId":"247","severity":1,"message":"301","line":39,"column":7,"nodeType":"249","endLine":39,"endColumn":20,"suggestions":"303"},{"ruleId":"243","severity":1,"message":"244","line":90,"column":22,"nodeType":"245","messageId":"246","endLine":90,"endColumn":24},{"ruleId":"243","severity":1,"message":"244","line":93,"column":29,"nodeType":"245","messageId":"246","endLine":93,"endColumn":31},{"ruleId":"243","severity":1,"message":"244","line":26,"column":43,"nodeType":"245","messageId":"246","endLine":26,"endColumn":45},{"ruleId":"243","severity":1,"message":"244","line":28,"column":49,"nodeType":"245","messageId":"246","endLine":28,"endColumn":51},{"ruleId":"243","severity":1,"message":"244","line":30,"column":53,"nodeType":"245","messageId":"246","endLine":30,"endColumn":55},{"ruleId":"238","severity":1,"message":"260","line":1,"column":20,"nodeType":"240","messageId":"241","endLine":1,"endColumn":28},{"ruleId":"243","severity":1,"message":"244","line":24,"column":53,"nodeType":"245","messageId":"246","endLine":24,"endColumn":55},{"ruleId":"243","severity":1,"message":"244","line":41,"column":36,"nodeType":"245","messageId":"246","endLine":41,"endColumn":38},{"ruleId":"288","severity":1,"message":"289","line":29,"column":17,"nodeType":"290","endLine":29,"endColumn":54},{"ruleId":"288","severity":1,"message":"289","line":30,"column":17,"nodeType":"290","endLine":30,"endColumn":54},{"ruleId":"288","severity":1,"message":"289","line":31,"column":17,"nodeType":"290","endLine":31,"endColumn":53},{"ruleId":"288","severity":1,"message":"289","line":32,"column":17,"nodeType":"290","endLine":32,"endColumn":53},{"ruleId":"288","severity":1,"message":"289","line":36,"column":21,"nodeType":"290","endLine":36,"endColumn":57},{"ruleId":"288","severity":1,"message":"289","line":37,"column":21,"nodeType":"290","endLine":37,"endColumn":57},{"ruleId":"288","severity":1,"message":"289","line":38,"column":21,"nodeType":"290","endLine":38,"endColumn":57},{"ruleId":"288","severity":1,"message":"289","line":39,"column":21,"nodeType":"290","endLine":39,"endColumn":57},{"ruleId":"288","severity":1,"message":"289","line":40,"column":21,"nodeType":"290","endLine":40,"endColumn":57},{"ruleId":"288","severity":1,"message":"289","line":60,"column":25,"nodeType":"290","endLine":60,"endColumn":62},"@typescript-eslint/no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'goods' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'goods', 'orderList', and 'sumOfMoneyArray'. Either include them or remove the dependency array. You can also do a functional update 'setOrderList(o => ...)' if you only need 'orderList' in the 'setOrderList' call.","ArrayExpression",["304"],"React Hook useEffect has a missing dependency: 'sumOfMoneyArray'. Either include it or remove the dependency array.",["305"],"React Hook useMemo has a missing dependency: 'goods'. Either include it or remove the dependency array.",["306"],"React Hook useEffect has missing dependencies: 'orderList' and 'sumOfMoneyArray'. Either include them or remove the dependency array. You can also do a functional update 'setOrderList(o => ...)' if you only need 'orderList' in the 'setOrderList' call.",["307"],"'useMemo' is defined but never used.","React Hook useEffect has a missing dependency: 'onProductTypeChange'. Either include it or remove the dependency array. If 'onProductTypeChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["308"],"'useState' is defined but never used.",["309"],"'GoodsItem' is defined but never used.","'navigate' is assigned a value but never used.",["310"],"'basketChanger' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'orderList'. Either include it or remove the dependency array.",["311"],"React Hook useEffect has a missing dependency: 'onOrderThingChange'. Either include it or remove the dependency array. If 'onOrderThingChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["312"],"React Hook useEffect has a missing dependency: 'onRemove'. Either include it or remove the dependency array. If 'onRemove' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["313"],"'type' is defined but never used.","'boxesArray' is assigned a value but never used.","'IGoods' is defined but never used.","'setProducts' is assigned a value but never used.",["314"],"'checkboxArraySost' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'checkboxArray'. Either include it or remove the dependency array. You can also do a functional update 'setCheckboxArray(c => ...)' if you only need 'checkboxArray' in the 'setCheckboxArray' call.",["315"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'goodsByCheckboxArray'.","ArrowFunctionExpression","unsafeRefs","React Hook useMemo has a missing dependency: 'checkbox'. Either include it or remove the dependency array.",["316"],"React Hook useMemo has a missing dependency: 'pagesArray'. Either include it or remove the dependency array.",["317"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'onTotalChange' and 'order.id'. Either include them or remove the dependency array. If 'onTotalChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["318"],"React Hook useEffect has a missing dependency: 'onGoodsUpdate'. Either include it or remove the dependency array. If 'onGoodsUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["319"],"React Hook useMemo has a missing dependency: 'products'. Either include it or remove the dependency array. You can also do a functional update 'setProducts(p => ...)' if you only need 'products' in the 'setProducts' call.",["320"],["321"],"React Hook useEffect has a missing dependency: 'create'. Either include it or remove the dependency array. If 'create' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["322"],["323"],"React Hook useEffect has a missing dependency: 'onEdit'. Either include it or remove the dependency array. If 'onEdit' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["324"],["325"],{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"334","fix":"336"},{"desc":"334","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"334","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"342","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},"Update the dependencies array to be: [goods, orderList, productType, sumOfMoneyArray]",{"range":"366","text":"367"},"Update the dependencies array to be: [orderThing, sumOfMoneyArray]",{"range":"368","text":"369"},"Update the dependencies array to be: [goods, sumOfMoneyArray]",{"range":"370","text":"371"},"Update the dependencies array to be: [orderList, removeThing, sumOfMoneyArray]",{"range":"372","text":"373"},"Update the dependencies array to be: [onProductTypeChange, productType]",{"range":"374","text":"375"},{"range":"376","text":"375"},{"range":"377","text":"375"},"Update the dependencies array to be: [basketThingsArray, orderList]",{"range":"378","text":"379"},"Update the dependencies array to be: [onOrderThingChange, total]",{"range":"380","text":"381"},"Update the dependencies array to be: [onRemove, removeThing]",{"range":"382","text":"383"},{"range":"384","text":"375"},"Update the dependencies array to be: [checkbox, checkboxArray]",{"range":"385","text":"386"},"Update the dependencies array to be: [checkbox, checkboxArray, sortedFiltreadSearchedPriceGoods]",{"range":"387","text":"388"},"Update the dependencies array to be: [pagesArray, pageNumber, finalFiltredGoods]",{"range":"389","text":"390"},"Update the dependencies array to be: [counter, onTotalChange, order.id]",{"range":"391","text":"392"},"Update the dependencies array to be: [onGoodsUpdate, products]",{"range":"393","text":"394"},"Update the dependencies array to be: [products, removeThing?.id]",{"range":"395","text":"396"},"Update the dependencies array to be: [editThing, products]",{"range":"397","text":"398"},"Update the dependencies array to be: [create, product]",{"range":"399","text":"400"},{"range":"401","text":"383"},"Update the dependencies array to be: [editThing, onEdit]",{"range":"402","text":"403"},"Update the dependencies array to be: [editProduct, onEdit]",{"range":"404","text":"405"},[2021,2034],"[goods, orderList, productType, sumOfMoneyArray]",[2675,2687],"[orderThing, sumOfMoneyArray]",[3339,3356],"[goods, sumOfMoneyArray]",[3974,3987],"[orderList, removeThing, sumOfMoneyArray]",[728,741],"[onProductTypeChange, productType]",[653,666],[1005,1018],[1555,1574],"[basketThingsArray, orderList]",[1745,1752],"[onOrderThingChange, total]",[1971,1984],"[onRemove, removeThing]",[903,916],[4555,4565],"[checkbox, checkboxArray]",[5196,5245],"[checkbox, checkboxArray, sortedFiltreadSearchedPriceGoods]",[5960,5991],"[pagesArray, pageNumber, finalFiltredGoods]",[704,713],"[counter, onTotalChange, order.id]",[940,950],"[onGoodsUpdate, products]",[2398,2411],"[products, removeThing?.id]",[2970,2981],"[editThing, products]",[856,865],"[create, product]",[573,586],[721,732],"[editThing, onEdit]",[1315,1328],"[editProduct, onEdit]"]